Nonterminals useless in grammar

    expressionopt


Terminals unused in grammar

    OF
    KEYWORD
    PUNCTUATOR
    SINGLE_LINE_COMMENT
    MULTI_LINE_COMMENT
    ERROR


State 105 conflicts: 1 reduce/reduce
State 123 conflicts: 14 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: translation-unit $end

    1 primary-expression: IDENTIFIER
    2                   | INTEGER
    3                   | FLOAT
    4                   | CHARACTER_CONSTANT
    5                   | ENUMERATION_CONST
    6                   | STRING_LITERAL
    7                   | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    8 postfix-expression: primary-expression
    9                   | postfix-expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
   10                   | postfix-expression LEFT_PARENTHESIS argument-expression-listopt RIGHT_PARENTHESIS
   11                   | postfix-expression DOT IDENTIFIER
   12                   | postfix-expression ARROW IDENTIFIER
   13                   | postfix-expression INCREMENT
   14                   | postfix-expression DECREMENT
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

   17 argument-expression-list: assignment-expression
   18                         | argument-expression-list COMMA assignment-expression

   19 argument-expression-listopt: argument-expression-list
   20                            | ε

   21 unary-expression: postfix-expression
   22                 | INCREMENT unary-expression
   23                 | DECREMENT unary-expression
   24                 | unary-operator cast-expression
   25                 | SIZEOF unary-expression
   26                 | SIZEOF LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS

   27 unary-operator: AND
   28               | STAR
   29               | PLUS
   30               | MINUS
   31               | TILDE
   32               | NOT

   33 cast-expression: unary-expression
   34                | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS cast-expression

   35 multiplicative-expression: cast-expression
   36                          | multiplicative-expression STAR cast-expression
   37                          | multiplicative-expression DIV cast-expression
   38                          | multiplicative-expression MOD cast-expression

   39 additive-expression: multiplicative-expression
   40                    | additive-expression PLUS multiplicative-expression
   41                    | additive-expression MINUS multiplicative-expression

   42 shift-expression: additive-expression
   43                 | shift-expression LEFT_SHIFT additive-expression
   44                 | shift-expression RIGHT_SHIFT additive-expression

   45 relational-expression: shift-expression
   46                      | relational-expression LESS_THAN shift-expression
   47                      | relational-expression GREATER_THAN shift-expression
   48                      | relational-expression LESS_THAN_EQUAL shift-expression
   49                      | relational-expression GREATER_THAN_EQUAL shift-expression

   50 equality-expression: relational-expression
   51                    | equality-expression EQUAL_TO relational-expression
   52                    | equality-expression NOT_EQUAL_TO relational-expression

   53 AND-expression: equality-expression
   54               | AND-expression AND equality-expression

   55 exclusive-OR-expression: AND-expression
   56                        | exclusive-OR-expression XOR AND-expression

   57 inclusive-OR-expression: exclusive-OR-expression
   58                        | inclusive-OR-expression OR exclusive-OR-expression

   59 logical-AND-expression: inclusive-OR-expression
   60                       | logical-AND-expression AND_AND M inclusive-OR-expression

   61 logical-OR-expression: logical-AND-expression
   62                      | logical-OR-expression OR_OR M logical-AND-expression

   63 conditional-expression: logical-OR-expression
   64                       | logical-OR-expression N QUESTION M expression N COLON M conditional-expression

   65 M: ε

   66 N: ε

   67 assignment-expression: conditional-expression
   68                      | unary-expression ASSIGNMENT_OPERATOR assignment-expression

   69 expression: assignment-expression
   70           | expression COMMA assignment-expression

   71 constant-expression: conditional-expression

   72 declaration: declaration-specifiers init-declarator-listopt SEMICOLON

   73 init-declarator-listopt: init-declarator-list
   74                        | ε

   75 declaration-specifiers: storage-class-specifier declaration-specifiers
   76                       | storage-class-specifier
   77                       | TYPE_SPECIFIER_TOKEN declaration-specifiers
   78                       | TYPE_SPECIFIER_TOKEN
   79                       | type-qualifier declaration-specifiers
   80                       | type-qualifier
   81                       | function-specifier declaration-specifiers
   82                       | function-specifier

   83 type-qualifier: TYPE_QUALIFIER

   84 init-declarator-list: init-declarator
   85                     | init-declarator-list COMMA init-declarator

   86 init-declarator: declarator
   87                | declarator EQUALS initializer

   88 type-specifier: VOID
   89               | CHAR
   90               | SHORT
   91               | INT
   92               | LONG
   93               | FLOAT
   94               | DOUBLE
   95               | SIGNED
   96               | UNSIGNED
   97               | BOOL
   98               | COMPLEX
   99               | IMAGINARY
  100               | enum-specifier

  101 storage-class-specifier: STORAGE_CLASS_SPECIFIER
  102                        | STATIC_TOKEN

  103 specifier-qualifier-list: type-specifier specifier-qualifier-listopt
  104                         | enum-specifier specifier-qualifier-listopt
  105                         | TYPE_QUALIFIER specifier-qualifier-listopt

  106 specifier-qualifier-listopt: specifier-qualifier-list
  107                            | ε

  108 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET
  109               | ENUM IDENTIFIER
  110               | ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET

  111 identifieropt: IDENTIFIER
  112              | ε

  113 enumerator-list: enumerator
  114                | enumerator-list COMMA enumerator

  115 enumerator: IDENTIFIER
  116           | IDENTIFIER EQUALS constant-expression

  117 function-specifier: FUNCTION_SPECIFIER

  118 declarator: pointer direct-declarator
  119           | direct-declarator

  120 direct-declarator: IDENTIFIER
  121                  | LEFT_PARENTHESIS declarator RIGHT_PARENTHESIS
  122                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET
  123                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET
  125                  | direct-declarator LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  126                  | direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  129                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET
  131                  | direct-declarator LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS
  132                  | direct-declarator LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS
  133                  | direct-declarator LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS

  134 type-qualifier-listopt: type-qualifier-list
  135                       | ε

  136 pointer: STAR type-qualifier-listopt
  137        | STAR type-qualifier-listopt pointer

  138 type-qualifier-list: TYPE_QUALIFIER
  139                    | type-qualifier-list TYPE_QUALIFIER

  140 parameter-type-list: parameter-list
  141                    | parameter-list COMMA ELLIPSIS

  142 parameter-list: parameter-declaration
  143               | parameter-list COMMA parameter-declaration

  144 parameter-declaration: declaration-specifiers declarator
  145                      | declaration-specifiers

  146 identifier-list: IDENTIFIER
  147                | identifier-list COMMA IDENTIFIER

  148 type-name: specifier-qualifier-list

  149 initializer: assignment-expression
  150            | LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
  151            | LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

  152 initializer-list: designationopt initializer
  153                 | initializer-list COMMA designationopt initializer

  154 designationopt: designation
  155               | ε

  156 designation: designator-list EQUALS

  157 designator-list: designator
  158                | designator-list designator

  159 designator: LEFT_SQUARE_BRACKET constant-expression RIGHT_SQUARE_BRACKET
  160           | DOT IDENTIFIER

  161 statement: labeled-statement
  162          | compound-statement
  163          | expression-statement
  164          | selection-statement
  165          | iteration-statement
  166          | jump-statement

  167 loop-statement: labeled-statement
  168               | expression-statement
  169               | selection-statement
  170               | iteration-statement
  171               | jump-statement

  172 labeled-statement: IDENTIFIER COLON statement
  173                  | CASE constant-expression COLON statement
  174                  | DEFAULT COLON statement

  175 compound-statement: LEFT_CURLY_BRACKET A change-table block-item-listopt RIGHT_CURLY_BRACKET

  176 A: ε

  177 change-table: ε

  178 block-item-listopt: block-item-list
  179                   | ε

  180 block-item-list: block-item
  181                | block-item-list M block-item

  182 block-item: declaration
  183           | statement

  184 expression-statement: expression SEMICOLON
  185                     | SEMICOLON

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N
  187                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M statement
  188                    | SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET
  191                    | DO D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  192                    | DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  193                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

  197 F: ε

  198 W: ε

  199 D: ε

  200 jump-statement: GOTO IDENTIFIER SEMICOLON
  201               | CONTINUE SEMICOLON
  202               | BREAK SEMICOLON
  203               | RETURN expression SEMICOLON
  204               | RETURN SEMICOLON

  205 translation-unit: external-declaration
  206                 | translation-unit external-declaration

  207 external-declaration: function-definition
  208                     | declaration

  209 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

  210 declaration-listopt: declaration-list
  211                    | ε

  212 declaration-list: declaration
  213                 | declaration-list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <pointer> (258) 1 11 12 109 111 115 116 120 146 147 160 172 200
    INTEGER <intval> (259) 2
    FLOAT <floatval> (260) 3 93
    CHARACTER_CONSTANT <charval> (261) 4
    STRING_LITERAL <charval> (262) 6
    ENUM (263) 108 109 110
    TYPE_SPECIFIER_TOKEN (264) 77 78
    STORAGE_CLASS_SPECIFIER (265) 101
    STATIC_TOKEN (266) 102 126 127 128
    FUNCTION_SPECIFIER (267) 117
    CASE (268) 173
    DEFAULT (269) 174
    SIZEOF (270) 25 26
    OF (271)
    ELSE (272) 187
    SWITCH (273) 188
    WHILE (274) 189 190 191 192
    DO (275) 191 192
    FOR (276) 193 194 195 196
    GOTO (277) 200
    CONTINUE (278) 201
    BREAK (279) 202
    RETURN (280) 203 204
    TYPE_QUALIFIER (281) 83 105 138 139
    KEYWORD (282)
    ENUMERATION_CONST (283) 5
    PUNCTUATOR (284)
    ASSIGNMENT_OPERATOR (285) 68
    SINGLE_LINE_COMMENT (286)
    MULTI_LINE_COMMENT (287)
    ERROR (288)
    VOID (289) 88
    CHAR (290) 89
    SHORT (291) 90
    INT (292) 91
    LONG (293) 92
    DOUBLE (294) 94
    SIGNED (295) 95
    UNSIGNED (296) 96
    BOOL (297) 97
    COMPLEX (298) 98
    IMAGINARY (299) 99
    IF (300) 186 187
    EQUALS (301) 87 116 156
    INCREMENT (302) 13 22
    DECREMENT (303) 14 23
    AND (304) 27 54
    STAR (305) 28 36 129 130 136 137
    PLUS (306) 29 40
    MINUS (307) 30 41
    TILDE (308) 31
    NOT (309) 32
    DIV (310) 37
    MOD (311) 38
    LEFT_SHIFT (312) 43
    RIGHT_SHIFT (313) 44
    LESS_THAN (314) 46
    GREATER_THAN (315) 47
    LESS_THAN_EQUAL (316) 48
    GREATER_THAN_EQUAL (317) 49
    EQUAL_TO (318) 51
    NOT_EQUAL_TO (319) 52
    XOR (320) 56
    OR (321) 58
    AND_AND (322) 60
    OR_OR (323) 62
    QUESTION (324) 64
    COLON (325) 64 172 173 174
    SEMICOLON (326) 72 184 185 191 192 200 201 202 203 204
    COMMA (327) 16 18 70 85 110 114 141 143 147 151 153
    LEFT_SQUARE_BRACKET (328) 9 122 123 124 125 126 127 128 129 130 159
    RIGHT_SQUARE_BRACKET (329) 9 122 123 124 125 126 127 128 129 130 159
    LEFT_CURLY_BRACKET (330) 15 16 108 110 150 151 175 190 192 195 196 209
    RIGHT_CURLY_BRACKET (331) 15 16 108 110 150 151 175 190 192 195 196 209
    LEFT_PARENTHESIS (332) 7 10 15 16 26 34 121 131 132 133 186 187 188 189 190 191 192 193 194 195 196
    RIGHT_PARENTHESIS (333) 7 10 15 16 26 34 121 131 132 133 186 187 188 189 190 191 192 193 194 195 196
    DOT (334) 11 160
    ELLIPSIS (335) 141
    ARROW (336) 12
    LOWER_THAN_ELSE (337)


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    primary-expression <exp> (84)
        on left: 1 2 3 4 5 6 7
        on right: 8
    postfix-expression <Array> (85)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 9 10 11 12 13 14 21
    argument-expression-list <numParams> (86)
        on left: 17 18
        on right: 18 19
    argument-expression-listopt <numParams> (87)
        on left: 19 20
        on right: 10
    unary-expression <Array> (88)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 68
    unary-operator <operator> (89)
        on left: 27 28 29 30 31 32
        on right: 24
    cast-expression <Array> (90)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative-expression <exp> (91)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive-expression <exp> (92)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift-expression <exp> (93)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational-expression <exp> (94)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality-expression <exp> (95)
        on left: 50 51 52
        on right: 51 52 53 54
    AND-expression <exp> (96)
        on left: 53 54
        on right: 54 55 56
    exclusive-OR-expression <exp> (97)
        on left: 55 56
        on right: 56 57 58
    inclusive-OR-expression <exp> (98)
        on left: 57 58
        on right: 58 59 60
    logical-AND-expression <exp> (99)
        on left: 59 60
        on right: 60 61 62
    logical-OR-expression <exp> (100)
        on left: 61 62
        on right: 62 63 64
    conditional-expression <exp> (101)
        on left: 63 64
        on right: 64 67 71
    M <intval> (102)
        on left: 65
        on right: 60 62 64 181 186 187 189 190 191 192 193 194 195 196
    N <stmt> (103)
        on left: 66
        on right: 64 186 187 193 194 195 196
    assignment-expression <exp> (104)
        on left: 67 68
        on right: 17 18 68 69 70 123 124 126 127 128 149
    expression <exp> (105)
        on left: 69 70
        on right: 7 9 64 70 184 186 187 188 189 190 191 192 193 194 195 196 203
    constant-expression <exp> (106)
        on left: 71
        on right: 116 159 173
    declaration (107)
        on left: 72
        on right: 182 193 195 208 212 213
    init-declarator-listopt (108)
        on left: 73 74
        on right: 72
    declaration-specifiers (109)
        on left: 75 76 77 78 79 80 81 82
        on right: 72 75 77 79 81 144 145 209
    type-qualifier (110)
        on left: 83
        on right: 79 80
    init-declarator-list (111)
        on left: 84 85
        on right: 73 85
    init-declarator <pointer> (112)
        on left: 86 87
        on right: 84 85
    type-specifier (113)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100
        on right: 103
    storage-class-specifier (114)
        on left: 101 102
        on right: 75 76
    specifier-qualifier-list (115)
        on left: 103 104 105
        on right: 106 148
    specifier-qualifier-listopt (116)
        on left: 106 107
        on right: 103 104 105
    enum-specifier (117)
        on left: 108 109 110
        on right: 100 104
    identifieropt (118)
        on left: 111 112
        on right: 108 110
    enumerator-list (119)
        on left: 113 114
        on right: 108 110 114
    enumerator (120)
        on left: 115 116
        on right: 113 114
    function-specifier (121)
        on left: 117
        on right: 81 82
    declarator <pointer> (122)
        on left: 118 119
        on right: 86 87 121 144 209
    direct-declarator <pointer> (123)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133
        on right: 118 119 122 123 124 125 126 127 128 129 130 131 132 133
    type-qualifier-listopt (124)
        on left: 134 135
        on right: 136 137
    pointer <ptr> (125)
        on left: 136 137
        on right: 118 137
    type-qualifier-list (126)
        on left: 138 139
        on right: 122 123 126 128 129 134 139
    parameter-type-list (127)
        on left: 140 141
        on right: 131
    parameter-list (128)
        on left: 142 143
        on right: 140 141 143
    parameter-declaration (129)
        on left: 144 145
        on right: 142 143
    identifier-list (130)
        on left: 146 147
        on right: 132 147
    type-name (131)
        on left: 148
        on right: 15 16 26 34
    initializer <numParams> (132)
        on left: 149 150 151
        on right: 87 152 153
    initializer-list (133)
        on left: 152 153
        on right: 15 16 150 151 153
    designationopt (134)
        on left: 154 155
        on right: 152 153
    designation (135)
        on left: 156
        on right: 154
    designator-list (136)
        on left: 157 158
        on right: 156 158
    designator (137)
        on left: 159 160
        on right: 157 158
    statement <stmt> (138)
        on left: 161 162 163 164 165 166
        on right: 172 173 174 183 186 187 188
    loop-statement <stmt> (139)
        on left: 167 168 169 170 171
        on right: 189 191 193 194
    labeled-statement <stmt> (140)
        on left: 172 173 174
        on right: 161 167
    compound-statement <stmt> (141)
        on left: 175
        on right: 162
    A (142)
        on left: 176
        on right: 175 189 190 193 194 195 196
    change-table (143)
        on left: 177
        on right: 131 133 175 189 190 193 194 195 196 209
    block-item-listopt <stmt> (144)
        on left: 178 179
        on right: 175 190 192 195 196 209
    block-item-list <stmt> (145)
        on left: 180 181
        on right: 178 181
    block-item <stmt> (146)
        on left: 182 183
        on right: 180 181
    expression-statement <exp> (147)
        on left: 184 185
        on right: 163 168 193 194 195 196
    selection-statement <stmt> (148)
        on left: 186 187 188
        on right: 164 169
    iteration-statement <stmt> (149)
        on left: 189 190 191 192 193 194 195 196
        on right: 165 170
    F (150)
        on left: 197
        on right: 193 194 195 196
    W (151)
        on left: 198
        on right: 189 190
    D (152)
        on left: 199
        on right: 191 192
    jump-statement <stmt> (153)
        on left: 200 201 202 203 204
        on right: 166 171
    translation-unit (154)
        on left: 205 206
        on right: 0 206
    external-declaration (155)
        on left: 207 208
        on right: 205 206
    function-definition (156)
        on left: 209
        on right: 207
    declaration-listopt (157)
        on left: 210 211
        on right: 209
    declaration-list (158)
        on left: 212 213
        on right: 210 213


State 0

    0 $accept: • translation-unit $end

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    declaration              go to state 6
    declaration-specifiers   go to state 7
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    translation-unit         go to state 11
    external-declaration     go to state 12
    function-definition      go to state 13


State 1

   77 declaration-specifiers: TYPE_SPECIFIER_TOKEN • declaration-specifiers
   78                       | TYPE_SPECIFIER_TOKEN •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 78 (declaration-specifiers)

    declaration-specifiers   go to state 14
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 2

  101 storage-class-specifier: STORAGE_CLASS_SPECIFIER •

    $default  reduce using rule 101 (storage-class-specifier)


State 3

  102 storage-class-specifier: STATIC_TOKEN •

    $default  reduce using rule 102 (storage-class-specifier)


State 4

  117 function-specifier: FUNCTION_SPECIFIER •

    $default  reduce using rule 117 (function-specifier)


State 5

   83 type-qualifier: TYPE_QUALIFIER •

    $default  reduce using rule 83 (type-qualifier)


State 6

  208 external-declaration: declaration •

    $default  reduce using rule 208 (external-declaration)


State 7

   72 declaration: declaration-specifiers • init-declarator-listopt SEMICOLON
  209 function-definition: declaration-specifiers • declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 17

    $default  reduce using rule 74 (init-declarator-listopt)

    init-declarator-listopt  go to state 18
    init-declarator-list     go to state 19
    init-declarator          go to state 20
    declarator               go to state 21
    direct-declarator        go to state 22
    pointer                  go to state 23


State 8

   79 declaration-specifiers: type-qualifier • declaration-specifiers
   80                       | type-qualifier •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 80 (declaration-specifiers)

    declaration-specifiers   go to state 24
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 9

   75 declaration-specifiers: storage-class-specifier • declaration-specifiers
   76                       | storage-class-specifier •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 76 (declaration-specifiers)

    declaration-specifiers   go to state 25
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 10

   81 declaration-specifiers: function-specifier • declaration-specifiers
   82                       | function-specifier •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 82 (declaration-specifiers)

    declaration-specifiers   go to state 26
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 11

    0 $accept: translation-unit • $end
  206 translation-unit: translation-unit • external-declaration

    $end                     shift, and go to state 27
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    declaration              go to state 6
    declaration-specifiers   go to state 7
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    external-declaration     go to state 28
    function-definition      go to state 13


State 12

  205 translation-unit: external-declaration •

    $default  reduce using rule 205 (translation-unit)


State 13

  207 external-declaration: function-definition •

    $default  reduce using rule 207 (external-declaration)


State 14

   77 declaration-specifiers: TYPE_SPECIFIER_TOKEN declaration-specifiers •

    $default  reduce using rule 77 (declaration-specifiers)


State 15

  120 direct-declarator: IDENTIFIER •

    $default  reduce using rule 120 (direct-declarator)


State 16

  136 pointer: STAR • type-qualifier-listopt
  137        | STAR • type-qualifier-listopt pointer

    TYPE_QUALIFIER  shift, and go to state 29

    $default  reduce using rule 135 (type-qualifier-listopt)

    type-qualifier-listopt  go to state 30
    type-qualifier-list     go to state 31


State 17

  121 direct-declarator: LEFT_PARENTHESIS • declarator RIGHT_PARENTHESIS

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 17

    declarator         go to state 32
    direct-declarator  go to state 22
    pointer            go to state 23


State 18

   72 declaration: declaration-specifiers init-declarator-listopt • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 19

   73 init-declarator-listopt: init-declarator-list •
   85 init-declarator-list: init-declarator-list • COMMA init-declarator

    COMMA  shift, and go to state 34

    $default  reduce using rule 73 (init-declarator-listopt)


State 20

   84 init-declarator-list: init-declarator •

    $default  reduce using rule 84 (init-declarator-list)


State 21

   86 init-declarator: declarator •
   87                | declarator • EQUALS initializer
  209 function-definition: declaration-specifiers declarator • declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5
    EQUALS                   shift, and go to state 35

    LEFT_CURLY_BRACKET  reduce using rule 211 (declaration-listopt)
    $default            reduce using rule 86 (init-declarator)

    declaration              go to state 36
    declaration-specifiers   go to state 37
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    declaration-listopt      go to state 38
    declaration-list         go to state 39


State 22

  119 declarator: direct-declarator •
  122 direct-declarator: direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET
  123                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator • LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET
  125                  | direct-declarator • LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  126                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  129                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator • LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET
  131                  | direct-declarator • LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS
  132                  | direct-declarator • LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS
  133                  | direct-declarator • LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 40
    LEFT_PARENTHESIS     shift, and go to state 41

    $default  reduce using rule 119 (declarator)


State 23

  118 declarator: pointer • direct-declarator

    IDENTIFIER        shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 17

    direct-declarator  go to state 42


State 24

   79 declaration-specifiers: type-qualifier declaration-specifiers •

    $default  reduce using rule 79 (declaration-specifiers)


State 25

   75 declaration-specifiers: storage-class-specifier declaration-specifiers •

    $default  reduce using rule 75 (declaration-specifiers)


State 26

   81 declaration-specifiers: function-specifier declaration-specifiers •

    $default  reduce using rule 81 (declaration-specifiers)


State 27

    0 $accept: translation-unit $end •

    $default  accept


State 28

  206 translation-unit: translation-unit external-declaration •

    $default  reduce using rule 206 (translation-unit)


State 29

  138 type-qualifier-list: TYPE_QUALIFIER •

    $default  reduce using rule 138 (type-qualifier-list)


State 30

  136 pointer: STAR type-qualifier-listopt •
  137        | STAR type-qualifier-listopt • pointer

    STAR  shift, and go to state 16

    $default  reduce using rule 136 (pointer)

    pointer  go to state 43


State 31

  134 type-qualifier-listopt: type-qualifier-list •
  139 type-qualifier-list: type-qualifier-list • TYPE_QUALIFIER

    TYPE_QUALIFIER  shift, and go to state 44

    $default  reduce using rule 134 (type-qualifier-listopt)


State 32

  121 direct-declarator: LEFT_PARENTHESIS declarator • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 45


State 33

   72 declaration: declaration-specifiers init-declarator-listopt SEMICOLON •

    $default  reduce using rule 72 (declaration)


State 34

   85 init-declarator-list: init-declarator-list COMMA • init-declarator

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 17

    init-declarator    go to state 46
    declarator         go to state 47
    direct-declarator  go to state 22
    pointer            go to state 23


State 35

   87 init-declarator: declarator EQUALS • initializer

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_CURLY_BRACKET  shift, and go to state 63
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 81
    initializer                go to state 82


State 36

  212 declaration-list: declaration •

    $default  reduce using rule 212 (declaration-list)


State 37

   72 declaration: declaration-specifiers • init-declarator-listopt SEMICOLON

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 17

    $default  reduce using rule 74 (init-declarator-listopt)

    init-declarator-listopt  go to state 18
    init-declarator-list     go to state 19
    init-declarator          go to state 20
    declarator               go to state 47
    direct-declarator        go to state 22
    pointer                  go to state 23


State 38

  209 function-definition: declaration-specifiers declarator declaration-listopt • change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 177 (change-table)

    change-table  go to state 83


State 39

  210 declaration-listopt: declaration-list •
  213 declaration-list: declaration-list • declaration

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 210 (declaration-listopt)

    declaration              go to state 84
    declaration-specifiers   go to state 37
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 40

  122 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list RIGHT_SQUARE_BRACKET
  123                  | direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator LEFT_SQUARE_BRACKET • assignment-expression RIGHT_SQUARE_BRACKET
  125                  | direct-declarator LEFT_SQUARE_BRACKET • RIGHT_SQUARE_BRACKET
  126                  | direct-declarator LEFT_SQUARE_BRACKET • STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator LEFT_SQUARE_BRACKET • STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  129                  | direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator LEFT_SQUARE_BRACKET • STAR RIGHT_SQUARE_BRACKET

    IDENTIFIER            shift, and go to state 48
    INTEGER               shift, and go to state 49
    FLOAT                 shift, and go to state 50
    CHARACTER_CONSTANT    shift, and go to state 51
    STRING_LITERAL        shift, and go to state 52
    STATIC_TOKEN          shift, and go to state 85
    SIZEOF                shift, and go to state 53
    TYPE_QUALIFIER        shift, and go to state 29
    ENUMERATION_CONST     shift, and go to state 54
    INCREMENT             shift, and go to state 55
    DECREMENT             shift, and go to state 56
    AND                   shift, and go to state 57
    STAR                  shift, and go to state 86
    PLUS                  shift, and go to state 59
    MINUS                 shift, and go to state 60
    TILDE                 shift, and go to state 61
    NOT                   shift, and go to state 62
    RIGHT_SQUARE_BRACKET  shift, and go to state 87
    LEFT_PARENTHESIS      shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 88
    type-qualifier-list        go to state 89


State 41

  131 direct-declarator: direct-declarator LEFT_PARENTHESIS • change-table parameter-type-list RIGHT_PARENTHESIS
  132                  | direct-declarator LEFT_PARENTHESIS • identifier-list RIGHT_PARENTHESIS
  133                  | direct-declarator LEFT_PARENTHESIS • change-table RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 90

    $default  reduce using rule 177 (change-table)

    identifier-list  go to state 91
    change-table     go to state 92


State 42

  118 declarator: pointer direct-declarator •
  122 direct-declarator: direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET
  123                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator • LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET
  125                  | direct-declarator • LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  126                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  129                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator • LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET
  131                  | direct-declarator • LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS
  132                  | direct-declarator • LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS
  133                  | direct-declarator • LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 40
    LEFT_PARENTHESIS     shift, and go to state 41

    $default  reduce using rule 118 (declarator)


State 43

  137 pointer: STAR type-qualifier-listopt pointer •

    $default  reduce using rule 137 (pointer)


State 44

  139 type-qualifier-list: type-qualifier-list TYPE_QUALIFIER •

    $default  reduce using rule 139 (type-qualifier-list)


State 45

  121 direct-declarator: LEFT_PARENTHESIS declarator RIGHT_PARENTHESIS •

    $default  reduce using rule 121 (direct-declarator)


State 46

   85 init-declarator-list: init-declarator-list COMMA init-declarator •

    $default  reduce using rule 85 (init-declarator-list)


State 47

   86 init-declarator: declarator •
   87                | declarator • EQUALS initializer

    EQUALS  shift, and go to state 35

    $default  reduce using rule 86 (init-declarator)


State 48

    1 primary-expression: IDENTIFIER •

    $default  reduce using rule 1 (primary-expression)


State 49

    2 primary-expression: INTEGER •

    $default  reduce using rule 2 (primary-expression)


State 50

    3 primary-expression: FLOAT •

    $default  reduce using rule 3 (primary-expression)


State 51

    4 primary-expression: CHARACTER_CONSTANT •

    $default  reduce using rule 4 (primary-expression)


State 52

    6 primary-expression: STRING_LITERAL •

    $default  reduce using rule 6 (primary-expression)


State 53

   25 unary-expression: SIZEOF • unary-expression
   26                 | SIZEOF • LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 93

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 94
    unary-operator      go to state 68


State 54

    5 primary-expression: ENUMERATION_CONST •

    $default  reduce using rule 5 (primary-expression)


State 55

   22 unary-expression: INCREMENT • unary-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 95

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 96
    unary-operator      go to state 68


State 56

   23 unary-expression: DECREMENT • unary-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 95

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 97
    unary-operator      go to state 68


State 57

   27 unary-operator: AND •

    $default  reduce using rule 27 (unary-operator)


State 58

   28 unary-operator: STAR •

    $default  reduce using rule 28 (unary-operator)


State 59

   29 unary-operator: PLUS •

    $default  reduce using rule 29 (unary-operator)


State 60

   30 unary-operator: MINUS •

    $default  reduce using rule 30 (unary-operator)


State 61

   31 unary-operator: TILDE •

    $default  reduce using rule 31 (unary-operator)


State 62

   32 unary-operator: NOT •

    $default  reduce using rule 32 (unary-operator)


State 63

  150 initializer: LEFT_CURLY_BRACKET • initializer-list RIGHT_CURLY_BRACKET
  151            | LEFT_CURLY_BRACKET • initializer-list COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 98
    DOT                  shift, and go to state 99

    $default  reduce using rule 155 (designationopt)

    initializer-list  go to state 100
    designationopt    go to state 101
    designation       go to state 102
    designator-list   go to state 103
    designator        go to state 104


State 64

    7 primary-expression: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   15 postfix-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   34 cast-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 105
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    ENUM                shift, and go to state 106
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 107
    ENUMERATION_CONST   shift, and go to state 54
    VOID                shift, and go to state 108
    CHAR                shift, and go to state 109
    SHORT               shift, and go to state 110
    INT                 shift, and go to state 111
    LONG                shift, and go to state 112
    DOUBLE              shift, and go to state 113
    SIGNED              shift, and go to state 114
    UNSIGNED            shift, and go to state 115
    BOOL                shift, and go to state 116
    COMPLEX             shift, and go to state 117
    IMAGINARY           shift, and go to state 118
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 120
    type-specifier             go to state 121
    specifier-qualifier-list   go to state 122
    enum-specifier             go to state 123
    type-name                  go to state 124


State 65

    8 postfix-expression: primary-expression •

    $default  reduce using rule 8 (postfix-expression)


State 66

    9 postfix-expression: postfix-expression • LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
   10                   | postfix-expression • LEFT_PARENTHESIS argument-expression-listopt RIGHT_PARENTHESIS
   11                   | postfix-expression • DOT IDENTIFIER
   12                   | postfix-expression • ARROW IDENTIFIER
   13                   | postfix-expression • INCREMENT
   14                   | postfix-expression • DECREMENT
   21 unary-expression: postfix-expression •

    INCREMENT            shift, and go to state 125
    DECREMENT            shift, and go to state 126
    LEFT_SQUARE_BRACKET  shift, and go to state 127
    LEFT_PARENTHESIS     shift, and go to state 128
    DOT                  shift, and go to state 129
    ARROW                shift, and go to state 130

    $default  reduce using rule 21 (unary-expression)


State 67

   33 cast-expression: unary-expression •
   68 assignment-expression: unary-expression • ASSIGNMENT_OPERATOR assignment-expression

    ASSIGNMENT_OPERATOR  shift, and go to state 131

    $default  reduce using rule 33 (cast-expression)


State 68

   24 unary-expression: unary-operator • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 132
    unary-operator      go to state 68
    cast-expression     go to state 133


State 69

   35 multiplicative-expression: cast-expression •

    $default  reduce using rule 35 (multiplicative-expression)


State 70

   36 multiplicative-expression: multiplicative-expression • STAR cast-expression
   37                          | multiplicative-expression • DIV cast-expression
   38                          | multiplicative-expression • MOD cast-expression
   39 additive-expression: multiplicative-expression •

    STAR  shift, and go to state 134
    DIV   shift, and go to state 135
    MOD   shift, and go to state 136

    $default  reduce using rule 39 (additive-expression)


State 71

   40 additive-expression: additive-expression • PLUS multiplicative-expression
   41                    | additive-expression • MINUS multiplicative-expression
   42 shift-expression: additive-expression •

    PLUS   shift, and go to state 137
    MINUS  shift, and go to state 138

    $default  reduce using rule 42 (shift-expression)


State 72

   43 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   44                 | shift-expression • RIGHT_SHIFT additive-expression
   45 relational-expression: shift-expression •

    LEFT_SHIFT   shift, and go to state 139
    RIGHT_SHIFT  shift, and go to state 140

    $default  reduce using rule 45 (relational-expression)


State 73

   46 relational-expression: relational-expression • LESS_THAN shift-expression
   47                      | relational-expression • GREATER_THAN shift-expression
   48                      | relational-expression • LESS_THAN_EQUAL shift-expression
   49                      | relational-expression • GREATER_THAN_EQUAL shift-expression
   50 equality-expression: relational-expression •

    LESS_THAN           shift, and go to state 141
    GREATER_THAN        shift, and go to state 142
    LESS_THAN_EQUAL     shift, and go to state 143
    GREATER_THAN_EQUAL  shift, and go to state 144

    $default  reduce using rule 50 (equality-expression)


State 74

   51 equality-expression: equality-expression • EQUAL_TO relational-expression
   52                    | equality-expression • NOT_EQUAL_TO relational-expression
   53 AND-expression: equality-expression •

    EQUAL_TO      shift, and go to state 145
    NOT_EQUAL_TO  shift, and go to state 146

    $default  reduce using rule 53 (AND-expression)


State 75

   54 AND-expression: AND-expression • AND equality-expression
   55 exclusive-OR-expression: AND-expression •

    AND  shift, and go to state 147

    $default  reduce using rule 55 (exclusive-OR-expression)


State 76

   56 exclusive-OR-expression: exclusive-OR-expression • XOR AND-expression
   57 inclusive-OR-expression: exclusive-OR-expression •

    XOR  shift, and go to state 148

    $default  reduce using rule 57 (inclusive-OR-expression)


State 77

   58 inclusive-OR-expression: inclusive-OR-expression • OR exclusive-OR-expression
   59 logical-AND-expression: inclusive-OR-expression •

    OR  shift, and go to state 149

    $default  reduce using rule 59 (logical-AND-expression)


State 78

   60 logical-AND-expression: logical-AND-expression • AND_AND M inclusive-OR-expression
   61 logical-OR-expression: logical-AND-expression •

    AND_AND  shift, and go to state 150

    $default  reduce using rule 61 (logical-OR-expression)


State 79

   62 logical-OR-expression: logical-OR-expression • OR_OR M logical-AND-expression
   63 conditional-expression: logical-OR-expression •
   64                       | logical-OR-expression • N QUESTION M expression N COLON M conditional-expression

    OR_OR  shift, and go to state 151

    QUESTION  reduce using rule 66 (N)
    $default  reduce using rule 63 (conditional-expression)

    N  go to state 152


State 80

   67 assignment-expression: conditional-expression •

    $default  reduce using rule 67 (assignment-expression)


State 81

  149 initializer: assignment-expression •

    $default  reduce using rule 149 (initializer)


State 82

   87 init-declarator: declarator EQUALS initializer •

    $default  reduce using rule 87 (init-declarator)


State 83

  209 function-definition: declaration-specifiers declarator declaration-listopt change-table • LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 153


State 84

  213 declaration-list: declaration-list declaration •

    $default  reduce using rule 213 (declaration-list)


State 85

  126 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN • type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN • assignment-expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 29
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 154
    type-qualifier-list        go to state 155


State 86

   28 unary-operator: STAR •
  130 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STAR • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 156

    $default  reduce using rule 28 (unary-operator)


State 87

  125 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 125 (direct-declarator)


State 88

  124 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 157


State 89

  122 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • RIGHT_SQUARE_BRACKET
  123                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  129                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • STAR RIGHT_SQUARE_BRACKET
  139 type-qualifier-list: type-qualifier-list • TYPE_QUALIFIER

    IDENTIFIER            shift, and go to state 48
    INTEGER               shift, and go to state 49
    FLOAT                 shift, and go to state 50
    CHARACTER_CONSTANT    shift, and go to state 51
    STRING_LITERAL        shift, and go to state 52
    STATIC_TOKEN          shift, and go to state 158
    SIZEOF                shift, and go to state 53
    TYPE_QUALIFIER        shift, and go to state 44
    ENUMERATION_CONST     shift, and go to state 54
    INCREMENT             shift, and go to state 55
    DECREMENT             shift, and go to state 56
    AND                   shift, and go to state 57
    STAR                  shift, and go to state 159
    PLUS                  shift, and go to state 59
    MINUS                 shift, and go to state 60
    TILDE                 shift, and go to state 61
    NOT                   shift, and go to state 62
    RIGHT_SQUARE_BRACKET  shift, and go to state 160
    LEFT_PARENTHESIS      shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 161


State 90

  146 identifier-list: IDENTIFIER •

    $default  reduce using rule 146 (identifier-list)


State 91

  132 direct-declarator: direct-declarator LEFT_PARENTHESIS identifier-list • RIGHT_PARENTHESIS
  147 identifier-list: identifier-list • COMMA IDENTIFIER

    COMMA              shift, and go to state 162
    RIGHT_PARENTHESIS  shift, and go to state 163


State 92

  131 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table • parameter-type-list RIGHT_PARENTHESIS
  133                  | direct-declarator LEFT_PARENTHESIS change-table • RIGHT_PARENTHESIS

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5
    RIGHT_PARENTHESIS        shift, and go to state 164

    declaration-specifiers   go to state 165
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    parameter-type-list      go to state 166
    parameter-list           go to state 167
    parameter-declaration    go to state 168


State 93

    7 primary-expression: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   15 postfix-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   26 unary-expression: SIZEOF LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 105
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    ENUM                shift, and go to state 106
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 107
    ENUMERATION_CONST   shift, and go to state 54
    VOID                shift, and go to state 108
    CHAR                shift, and go to state 109
    SHORT               shift, and go to state 110
    INT                 shift, and go to state 111
    LONG                shift, and go to state 112
    DOUBLE              shift, and go to state 113
    SIGNED              shift, and go to state 114
    UNSIGNED            shift, and go to state 115
    BOOL                shift, and go to state 116
    COMPLEX             shift, and go to state 117
    IMAGINARY           shift, and go to state 118
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 120
    type-specifier             go to state 121
    specifier-qualifier-list   go to state 122
    enum-specifier             go to state 123
    type-name                  go to state 169


State 94

   25 unary-expression: SIZEOF unary-expression •

    $default  reduce using rule 25 (unary-expression)


State 95

    7 primary-expression: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   15 postfix-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 105
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    ENUM                shift, and go to state 106
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 107
    ENUMERATION_CONST   shift, and go to state 54
    VOID                shift, and go to state 108
    CHAR                shift, and go to state 109
    SHORT               shift, and go to state 110
    INT                 shift, and go to state 111
    LONG                shift, and go to state 112
    DOUBLE              shift, and go to state 113
    SIGNED              shift, and go to state 114
    UNSIGNED            shift, and go to state 115
    BOOL                shift, and go to state 116
    COMPLEX             shift, and go to state 117
    IMAGINARY           shift, and go to state 118
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 120
    type-specifier             go to state 121
    specifier-qualifier-list   go to state 122
    enum-specifier             go to state 123
    type-name                  go to state 170


State 96

   22 unary-expression: INCREMENT unary-expression •

    $default  reduce using rule 22 (unary-expression)


State 97

   23 unary-expression: DECREMENT unary-expression •

    $default  reduce using rule 23 (unary-expression)


State 98

  159 designator: LEFT_SQUARE_BRACKET • constant-expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 171
    constant-expression        go to state 172


State 99

  160 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 173


State 100

  150 initializer: LEFT_CURLY_BRACKET initializer-list • RIGHT_CURLY_BRACKET
  151            | LEFT_CURLY_BRACKET initializer-list • COMMA RIGHT_CURLY_BRACKET
  153 initializer-list: initializer-list • COMMA designationopt initializer

    COMMA                shift, and go to state 174
    RIGHT_CURLY_BRACKET  shift, and go to state 175


State 101

  152 initializer-list: designationopt • initializer

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_CURLY_BRACKET  shift, and go to state 63
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 81
    initializer                go to state 176


State 102

  154 designationopt: designation •

    $default  reduce using rule 154 (designationopt)


State 103

  156 designation: designator-list • EQUALS
  158 designator-list: designator-list • designator

    EQUALS               shift, and go to state 177
    LEFT_SQUARE_BRACKET  shift, and go to state 98
    DOT                  shift, and go to state 99

    designator  go to state 178


State 104

  157 designator-list: designator •

    $default  reduce using rule 157 (designator-list)


State 105

    3 primary-expression: FLOAT •
   93 type-specifier: FLOAT •

    FLOAT              reduce using rule 93 (type-specifier)
    ENUM               reduce using rule 93 (type-specifier)
    TYPE_QUALIFIER     reduce using rule 93 (type-specifier)
    VOID               reduce using rule 93 (type-specifier)
    CHAR               reduce using rule 93 (type-specifier)
    SHORT              reduce using rule 93 (type-specifier)
    INT                reduce using rule 93 (type-specifier)
    LONG               reduce using rule 93 (type-specifier)
    DOUBLE             reduce using rule 93 (type-specifier)
    SIGNED             reduce using rule 93 (type-specifier)
    UNSIGNED           reduce using rule 93 (type-specifier)
    BOOL               reduce using rule 93 (type-specifier)
    COMPLEX            reduce using rule 93 (type-specifier)
    IMAGINARY          reduce using rule 93 (type-specifier)
    RIGHT_PARENTHESIS  reduce using rule 3 (primary-expression)
    RIGHT_PARENTHESIS  [reduce using rule 93 (type-specifier)]
    $default           reduce using rule 3 (primary-expression)


State 106

  108 enum-specifier: ENUM • identifieropt LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET
  109               | ENUM • IDENTIFIER
  110               | ENUM • identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 179

    $default  reduce using rule 112 (identifieropt)

    identifieropt  go to state 180


State 107

  105 specifier-qualifier-list: TYPE_QUALIFIER • specifier-qualifier-listopt

    FLOAT           shift, and go to state 181
    ENUM            shift, and go to state 106
    TYPE_QUALIFIER  shift, and go to state 107
    VOID            shift, and go to state 108
    CHAR            shift, and go to state 109
    SHORT           shift, and go to state 110
    INT             shift, and go to state 111
    LONG            shift, and go to state 112
    DOUBLE          shift, and go to state 113
    SIGNED          shift, and go to state 114
    UNSIGNED        shift, and go to state 115
    BOOL            shift, and go to state 116
    COMPLEX         shift, and go to state 117
    IMAGINARY       shift, and go to state 118

    $default  reduce using rule 107 (specifier-qualifier-listopt)

    type-specifier               go to state 121
    specifier-qualifier-list     go to state 182
    specifier-qualifier-listopt  go to state 183
    enum-specifier               go to state 123


State 108

   88 type-specifier: VOID •

    $default  reduce using rule 88 (type-specifier)


State 109

   89 type-specifier: CHAR •

    $default  reduce using rule 89 (type-specifier)


State 110

   90 type-specifier: SHORT •

    $default  reduce using rule 90 (type-specifier)


State 111

   91 type-specifier: INT •

    $default  reduce using rule 91 (type-specifier)


State 112

   92 type-specifier: LONG •

    $default  reduce using rule 92 (type-specifier)


State 113

   94 type-specifier: DOUBLE •

    $default  reduce using rule 94 (type-specifier)


State 114

   95 type-specifier: SIGNED •

    $default  reduce using rule 95 (type-specifier)


State 115

   96 type-specifier: UNSIGNED •

    $default  reduce using rule 96 (type-specifier)


State 116

   97 type-specifier: BOOL •

    $default  reduce using rule 97 (type-specifier)


State 117

   98 type-specifier: COMPLEX •

    $default  reduce using rule 98 (type-specifier)


State 118

   99 type-specifier: IMAGINARY •

    $default  reduce using rule 99 (type-specifier)


State 119

   69 expression: assignment-expression •

    $default  reduce using rule 69 (expression)


State 120

    7 primary-expression: LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS
   70 expression: expression • COMMA assignment-expression

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 185


State 121

  103 specifier-qualifier-list: type-specifier • specifier-qualifier-listopt

    FLOAT           shift, and go to state 181
    ENUM            shift, and go to state 106
    TYPE_QUALIFIER  shift, and go to state 107
    VOID            shift, and go to state 108
    CHAR            shift, and go to state 109
    SHORT           shift, and go to state 110
    INT             shift, and go to state 111
    LONG            shift, and go to state 112
    DOUBLE          shift, and go to state 113
    SIGNED          shift, and go to state 114
    UNSIGNED        shift, and go to state 115
    BOOL            shift, and go to state 116
    COMPLEX         shift, and go to state 117
    IMAGINARY       shift, and go to state 118

    $default  reduce using rule 107 (specifier-qualifier-listopt)

    type-specifier               go to state 121
    specifier-qualifier-list     go to state 182
    specifier-qualifier-listopt  go to state 186
    enum-specifier               go to state 123


State 122

  148 type-name: specifier-qualifier-list •

    $default  reduce using rule 148 (type-name)


State 123

  100 type-specifier: enum-specifier •
  104 specifier-qualifier-list: enum-specifier • specifier-qualifier-listopt

    FLOAT           shift, and go to state 181
    ENUM            shift, and go to state 106
    TYPE_QUALIFIER  shift, and go to state 107
    VOID            shift, and go to state 108
    CHAR            shift, and go to state 109
    SHORT           shift, and go to state 110
    INT             shift, and go to state 111
    LONG            shift, and go to state 112
    DOUBLE          shift, and go to state 113
    SIGNED          shift, and go to state 114
    UNSIGNED        shift, and go to state 115
    BOOL            shift, and go to state 116
    COMPLEX         shift, and go to state 117
    IMAGINARY       shift, and go to state 118

    FLOAT              [reduce using rule 100 (type-specifier)]
    ENUM               [reduce using rule 100 (type-specifier)]
    TYPE_QUALIFIER     [reduce using rule 100 (type-specifier)]
    VOID               [reduce using rule 100 (type-specifier)]
    CHAR               [reduce using rule 100 (type-specifier)]
    SHORT              [reduce using rule 100 (type-specifier)]
    INT                [reduce using rule 100 (type-specifier)]
    LONG               [reduce using rule 100 (type-specifier)]
    DOUBLE             [reduce using rule 100 (type-specifier)]
    SIGNED             [reduce using rule 100 (type-specifier)]
    UNSIGNED           [reduce using rule 100 (type-specifier)]
    BOOL               [reduce using rule 100 (type-specifier)]
    COMPLEX            [reduce using rule 100 (type-specifier)]
    IMAGINARY          [reduce using rule 100 (type-specifier)]
    RIGHT_PARENTHESIS  reduce using rule 100 (type-specifier)
    RIGHT_PARENTHESIS  [reduce using rule 107 (specifier-qualifier-listopt)]
    $default           reduce using rule 100 (type-specifier)

    type-specifier               go to state 121
    specifier-qualifier-list     go to state 182
    specifier-qualifier-listopt  go to state 187
    enum-specifier               go to state 123


State 124

   15 postfix-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   34 cast-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS cast-expression

    RIGHT_PARENTHESIS  shift, and go to state 188


State 125

   13 postfix-expression: postfix-expression INCREMENT •

    $default  reduce using rule 13 (postfix-expression)


State 126

   14 postfix-expression: postfix-expression DECREMENT •

    $default  reduce using rule 14 (postfix-expression)


State 127

    9 postfix-expression: postfix-expression LEFT_SQUARE_BRACKET • expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 189


State 128

   10 postfix-expression: postfix-expression LEFT_PARENTHESIS • argument-expression-listopt RIGHT_PARENTHESIS

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    $default  reduce using rule 20 (argument-expression-listopt)

    primary-expression           go to state 65
    postfix-expression           go to state 66
    argument-expression-list     go to state 190
    argument-expression-listopt  go to state 191
    unary-expression             go to state 67
    unary-operator               go to state 68
    cast-expression              go to state 69
    multiplicative-expression    go to state 70
    additive-expression          go to state 71
    shift-expression             go to state 72
    relational-expression        go to state 73
    equality-expression          go to state 74
    AND-expression               go to state 75
    exclusive-OR-expression      go to state 76
    inclusive-OR-expression      go to state 77
    logical-AND-expression       go to state 78
    logical-OR-expression        go to state 79
    conditional-expression       go to state 80
    assignment-expression        go to state 192


State 129

   11 postfix-expression: postfix-expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 193


State 130

   12 postfix-expression: postfix-expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 194


State 131

   68 assignment-expression: unary-expression ASSIGNMENT_OPERATOR • assignment-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 195


State 132

   33 cast-expression: unary-expression •

    $default  reduce using rule 33 (cast-expression)


State 133

   24 unary-expression: unary-operator cast-expression •

    $default  reduce using rule 24 (unary-expression)


State 134

   36 multiplicative-expression: multiplicative-expression STAR • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 132
    unary-operator      go to state 68
    cast-expression     go to state 196


State 135

   37 multiplicative-expression: multiplicative-expression DIV • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 132
    unary-operator      go to state 68
    cast-expression     go to state 197


State 136

   38 multiplicative-expression: multiplicative-expression MOD • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 132
    unary-operator      go to state 68
    cast-expression     go to state 198


State 137

   40 additive-expression: additive-expression PLUS • multiplicative-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 199


State 138

   41 additive-expression: additive-expression MINUS • multiplicative-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 200


State 139

   43 shift-expression: shift-expression LEFT_SHIFT • additive-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 201


State 140

   44 shift-expression: shift-expression RIGHT_SHIFT • additive-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 202


State 141

   46 relational-expression: relational-expression LESS_THAN • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 203


State 142

   47 relational-expression: relational-expression GREATER_THAN • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 204


State 143

   48 relational-expression: relational-expression LESS_THAN_EQUAL • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 205


State 144

   49 relational-expression: relational-expression GREATER_THAN_EQUAL • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 206


State 145

   51 equality-expression: equality-expression EQUAL_TO • relational-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 207


State 146

   52 equality-expression: equality-expression NOT_EQUAL_TO • relational-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 208


State 147

   54 AND-expression: AND-expression AND • equality-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 209


State 148

   56 exclusive-OR-expression: exclusive-OR-expression XOR • AND-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 210


State 149

   58 inclusive-OR-expression: inclusive-OR-expression OR • exclusive-OR-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 211


State 150

   60 logical-AND-expression: logical-AND-expression AND_AND • M inclusive-OR-expression

    $default  reduce using rule 65 (M)

    M  go to state 212


State 151

   62 logical-OR-expression: logical-OR-expression OR_OR • M logical-AND-expression

    $default  reduce using rule 65 (M)

    M  go to state 213


State 152

   64 conditional-expression: logical-OR-expression N • QUESTION M expression N COLON M conditional-expression

    QUESTION  shift, and go to state 214


State 153

  209 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    $default  reduce using rule 179 (block-item-listopt)

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item-listopt         go to state 234
    block-item-list            go to state 235
    block-item                 go to state 236
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 154

  127 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 241


State 155

  126 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list • assignment-expression RIGHT_SQUARE_BRACKET
  139 type-qualifier-list: type-qualifier-list • TYPE_QUALIFIER

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 44
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 242


State 156

  130 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 130 (direct-declarator)


State 157

  124 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 124 (direct-declarator)


State 158

  128 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN • assignment-expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 243


State 159

   28 unary-operator: STAR •
  129 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STAR • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 244

    $default  reduce using rule 28 (unary-operator)


State 160

  122 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 122 (direct-declarator)


State 161

  123 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 245


State 162

  147 identifier-list: identifier-list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 246


State 163

  132 direct-declarator: direct-declarator LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS •

    $default  reduce using rule 132 (direct-declarator)


State 164

  133 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS •

    $default  reduce using rule 133 (direct-declarator)


State 165

  144 parameter-declaration: declaration-specifiers • declarator
  145                      | declaration-specifiers •

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 17

    $default  reduce using rule 145 (parameter-declaration)

    declarator         go to state 247
    direct-declarator  go to state 22
    pointer            go to state 23


State 166

  131 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table parameter-type-list • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 248


State 167

  140 parameter-type-list: parameter-list •
  141                    | parameter-list • COMMA ELLIPSIS
  143 parameter-list: parameter-list • COMMA parameter-declaration

    COMMA  shift, and go to state 249

    $default  reduce using rule 140 (parameter-type-list)


State 168

  142 parameter-list: parameter-declaration •

    $default  reduce using rule 142 (parameter-list)


State 169

   15 postfix-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   26 unary-expression: SIZEOF LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 250


State 170

   15 postfix-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 251


State 171

   71 constant-expression: conditional-expression •

    $default  reduce using rule 71 (constant-expression)


State 172

  159 designator: LEFT_SQUARE_BRACKET constant-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 252


State 173

  160 designator: DOT IDENTIFIER •

    $default  reduce using rule 160 (designator)


State 174

  151 initializer: LEFT_CURLY_BRACKET initializer-list COMMA • RIGHT_CURLY_BRACKET
  153 initializer-list: initializer-list COMMA • designationopt initializer

    LEFT_SQUARE_BRACKET  shift, and go to state 98
    RIGHT_CURLY_BRACKET  shift, and go to state 253
    DOT                  shift, and go to state 99

    $default  reduce using rule 155 (designationopt)

    designationopt   go to state 254
    designation      go to state 102
    designator-list  go to state 103
    designator       go to state 104


State 175

  150 initializer: LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET •

    $default  reduce using rule 150 (initializer)


State 176

  152 initializer-list: designationopt initializer •

    $default  reduce using rule 152 (initializer-list)


State 177

  156 designation: designator-list EQUALS •

    $default  reduce using rule 156 (designation)


State 178

  158 designator-list: designator-list designator •

    $default  reduce using rule 158 (designator-list)


State 179

  109 enum-specifier: ENUM IDENTIFIER •
  111 identifieropt: IDENTIFIER •

    LEFT_CURLY_BRACKET  reduce using rule 111 (identifieropt)
    $default            reduce using rule 109 (enum-specifier)


State 180

  108 enum-specifier: ENUM identifieropt • LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET
  110               | ENUM identifieropt • LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 255


State 181

   93 type-specifier: FLOAT •

    $default  reduce using rule 93 (type-specifier)


State 182

  106 specifier-qualifier-listopt: specifier-qualifier-list •

    $default  reduce using rule 106 (specifier-qualifier-listopt)


State 183

  105 specifier-qualifier-list: TYPE_QUALIFIER specifier-qualifier-listopt •

    $default  reduce using rule 105 (specifier-qualifier-list)


State 184

   70 expression: expression COMMA • assignment-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 256


State 185

    7 primary-expression: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS •

    $default  reduce using rule 7 (primary-expression)


State 186

  103 specifier-qualifier-list: type-specifier specifier-qualifier-listopt •

    $default  reduce using rule 103 (specifier-qualifier-list)


State 187

  104 specifier-qualifier-list: enum-specifier specifier-qualifier-listopt •

    $default  reduce using rule 104 (specifier-qualifier-list)


State 188

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   34 cast-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_CURLY_BRACKET  shift, and go to state 257
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression  go to state 65
    postfix-expression  go to state 66
    unary-expression    go to state 132
    unary-operator      go to state 68
    cast-expression     go to state 258


State 189

    9 postfix-expression: postfix-expression LEFT_SQUARE_BRACKET expression • RIGHT_SQUARE_BRACKET
   70 expression: expression • COMMA assignment-expression

    COMMA                 shift, and go to state 184
    RIGHT_SQUARE_BRACKET  shift, and go to state 259


State 190

   18 argument-expression-list: argument-expression-list • COMMA assignment-expression
   19 argument-expression-listopt: argument-expression-list •

    COMMA  shift, and go to state 260

    $default  reduce using rule 19 (argument-expression-listopt)


State 191

   10 postfix-expression: postfix-expression LEFT_PARENTHESIS argument-expression-listopt • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 261


State 192

   17 argument-expression-list: assignment-expression •

    $default  reduce using rule 17 (argument-expression-list)


State 193

   11 postfix-expression: postfix-expression DOT IDENTIFIER •

    $default  reduce using rule 11 (postfix-expression)


State 194

   12 postfix-expression: postfix-expression ARROW IDENTIFIER •

    $default  reduce using rule 12 (postfix-expression)


State 195

   68 assignment-expression: unary-expression ASSIGNMENT_OPERATOR assignment-expression •

    $default  reduce using rule 68 (assignment-expression)


State 196

   36 multiplicative-expression: multiplicative-expression STAR cast-expression •

    $default  reduce using rule 36 (multiplicative-expression)


State 197

   37 multiplicative-expression: multiplicative-expression DIV cast-expression •

    $default  reduce using rule 37 (multiplicative-expression)


State 198

   38 multiplicative-expression: multiplicative-expression MOD cast-expression •

    $default  reduce using rule 38 (multiplicative-expression)


State 199

   36 multiplicative-expression: multiplicative-expression • STAR cast-expression
   37                          | multiplicative-expression • DIV cast-expression
   38                          | multiplicative-expression • MOD cast-expression
   40 additive-expression: additive-expression PLUS multiplicative-expression •

    STAR  shift, and go to state 134
    DIV   shift, and go to state 135
    MOD   shift, and go to state 136

    $default  reduce using rule 40 (additive-expression)


State 200

   36 multiplicative-expression: multiplicative-expression • STAR cast-expression
   37                          | multiplicative-expression • DIV cast-expression
   38                          | multiplicative-expression • MOD cast-expression
   41 additive-expression: additive-expression MINUS multiplicative-expression •

    STAR  shift, and go to state 134
    DIV   shift, and go to state 135
    MOD   shift, and go to state 136

    $default  reduce using rule 41 (additive-expression)


State 201

   40 additive-expression: additive-expression • PLUS multiplicative-expression
   41                    | additive-expression • MINUS multiplicative-expression
   43 shift-expression: shift-expression LEFT_SHIFT additive-expression •

    PLUS   shift, and go to state 137
    MINUS  shift, and go to state 138

    $default  reduce using rule 43 (shift-expression)


State 202

   40 additive-expression: additive-expression • PLUS multiplicative-expression
   41                    | additive-expression • MINUS multiplicative-expression
   44 shift-expression: shift-expression RIGHT_SHIFT additive-expression •

    PLUS   shift, and go to state 137
    MINUS  shift, and go to state 138

    $default  reduce using rule 44 (shift-expression)


State 203

   43 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   44                 | shift-expression • RIGHT_SHIFT additive-expression
   46 relational-expression: relational-expression LESS_THAN shift-expression •

    LEFT_SHIFT   shift, and go to state 139
    RIGHT_SHIFT  shift, and go to state 140

    $default  reduce using rule 46 (relational-expression)


State 204

   43 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   44                 | shift-expression • RIGHT_SHIFT additive-expression
   47 relational-expression: relational-expression GREATER_THAN shift-expression •

    LEFT_SHIFT   shift, and go to state 139
    RIGHT_SHIFT  shift, and go to state 140

    $default  reduce using rule 47 (relational-expression)


State 205

   43 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   44                 | shift-expression • RIGHT_SHIFT additive-expression
   48 relational-expression: relational-expression LESS_THAN_EQUAL shift-expression •

    LEFT_SHIFT   shift, and go to state 139
    RIGHT_SHIFT  shift, and go to state 140

    $default  reduce using rule 48 (relational-expression)


State 206

   43 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   44                 | shift-expression • RIGHT_SHIFT additive-expression
   49 relational-expression: relational-expression GREATER_THAN_EQUAL shift-expression •

    LEFT_SHIFT   shift, and go to state 139
    RIGHT_SHIFT  shift, and go to state 140

    $default  reduce using rule 49 (relational-expression)


State 207

   46 relational-expression: relational-expression • LESS_THAN shift-expression
   47                      | relational-expression • GREATER_THAN shift-expression
   48                      | relational-expression • LESS_THAN_EQUAL shift-expression
   49                      | relational-expression • GREATER_THAN_EQUAL shift-expression
   51 equality-expression: equality-expression EQUAL_TO relational-expression •

    LESS_THAN           shift, and go to state 141
    GREATER_THAN        shift, and go to state 142
    LESS_THAN_EQUAL     shift, and go to state 143
    GREATER_THAN_EQUAL  shift, and go to state 144

    $default  reduce using rule 51 (equality-expression)


State 208

   46 relational-expression: relational-expression • LESS_THAN shift-expression
   47                      | relational-expression • GREATER_THAN shift-expression
   48                      | relational-expression • LESS_THAN_EQUAL shift-expression
   49                      | relational-expression • GREATER_THAN_EQUAL shift-expression
   52 equality-expression: equality-expression NOT_EQUAL_TO relational-expression •

    LESS_THAN           shift, and go to state 141
    GREATER_THAN        shift, and go to state 142
    LESS_THAN_EQUAL     shift, and go to state 143
    GREATER_THAN_EQUAL  shift, and go to state 144

    $default  reduce using rule 52 (equality-expression)


State 209

   51 equality-expression: equality-expression • EQUAL_TO relational-expression
   52                    | equality-expression • NOT_EQUAL_TO relational-expression
   54 AND-expression: AND-expression AND equality-expression •

    EQUAL_TO      shift, and go to state 145
    NOT_EQUAL_TO  shift, and go to state 146

    $default  reduce using rule 54 (AND-expression)


State 210

   54 AND-expression: AND-expression • AND equality-expression
   56 exclusive-OR-expression: exclusive-OR-expression XOR AND-expression •

    AND  shift, and go to state 147

    $default  reduce using rule 56 (exclusive-OR-expression)


State 211

   56 exclusive-OR-expression: exclusive-OR-expression • XOR AND-expression
   58 inclusive-OR-expression: inclusive-OR-expression OR exclusive-OR-expression •

    XOR  shift, and go to state 148

    $default  reduce using rule 58 (inclusive-OR-expression)


State 212

   60 logical-AND-expression: logical-AND-expression AND_AND M • inclusive-OR-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 262


State 213

   62 logical-OR-expression: logical-OR-expression OR_OR M • logical-AND-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 263


State 214

   64 conditional-expression: logical-OR-expression N QUESTION • M expression N COLON M conditional-expression

    $default  reduce using rule 65 (M)

    M  go to state 264


State 215

    1 primary-expression: IDENTIFIER •
  172 labeled-statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 265

    $default  reduce using rule 1 (primary-expression)


State 216

  173 labeled-statement: CASE • constant-expression COLON statement

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 171
    constant-expression        go to state 266


State 217

  174 labeled-statement: DEFAULT • COLON statement

    COLON  shift, and go to state 267


State 218

  188 selection-statement: SWITCH • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS  shift, and go to state 268


State 219

  189 iteration-statement: WHILE • W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE • W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 198 (W)

    W  go to state 269


State 220

  191 iteration-statement: DO • D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  192                    | DO • D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 199 (D)

    D  go to state 270


State 221

  193 iteration-statement: FOR • F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR • F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR • F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  196                    | FOR • F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 197 (F)

    F  go to state 271


State 222

  200 jump-statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 272


State 223

  201 jump-statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 273


State 224

  202 jump-statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 274


State 225

  203 jump-statement: RETURN • expression SEMICOLON
  204               | RETURN • SEMICOLON

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 275
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 276


State 226

  186 selection-statement: IF • LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N
  187                    | IF • LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M statement

    LEFT_PARENTHESIS  shift, and go to state 277


State 227

  185 expression-statement: SEMICOLON •

    $default  reduce using rule 185 (expression-statement)


State 228

  175 compound-statement: LEFT_CURLY_BRACKET • A change-table block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (A)

    A  go to state 278


State 229

   70 expression: expression • COMMA assignment-expression
  184 expression-statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 279
    COMMA      shift, and go to state 184


State 230

  182 block-item: declaration •

    $default  reduce using rule 182 (block-item)


State 231

  183 block-item: statement •

    $default  reduce using rule 183 (block-item)


State 232

  161 statement: labeled-statement •

    $default  reduce using rule 161 (statement)


State 233

  162 statement: compound-statement •

    $default  reduce using rule 162 (statement)


State 234

  209 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 280


State 235

  178 block-item-listopt: block-item-list •
  181 block-item-list: block-item-list • M block-item

    RIGHT_CURLY_BRACKET  reduce using rule 178 (block-item-listopt)
    $default             reduce using rule 65 (M)

    M  go to state 281


State 236

  180 block-item-list: block-item •

    $default  reduce using rule 180 (block-item-list)


State 237

  163 statement: expression-statement •

    $default  reduce using rule 163 (statement)


State 238

  164 statement: selection-statement •

    $default  reduce using rule 164 (statement)


State 239

  165 statement: iteration-statement •

    $default  reduce using rule 165 (statement)


State 240

  166 statement: jump-statement •

    $default  reduce using rule 166 (statement)


State 241

  127 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 127 (direct-declarator)


State 242

  126 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 282


State 243

  128 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 283


State 244

  129 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 129 (direct-declarator)


State 245

  123 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 123 (direct-declarator)


State 246

  147 identifier-list: identifier-list COMMA IDENTIFIER •

    $default  reduce using rule 147 (identifier-list)


State 247

  144 parameter-declaration: declaration-specifiers declarator •

    $default  reduce using rule 144 (parameter-declaration)


State 248

  131 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS •

    $default  reduce using rule 131 (direct-declarator)


State 249

  141 parameter-type-list: parameter-list COMMA • ELLIPSIS
  143 parameter-list: parameter-list COMMA • parameter-declaration

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5
    ELLIPSIS                 shift, and go to state 284

    declaration-specifiers   go to state 165
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    parameter-declaration    go to state 285


State 250

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   26 unary-expression: SIZEOF LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS •

    LEFT_CURLY_BRACKET  shift, and go to state 257

    $default  reduce using rule 26 (unary-expression)


State 251

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 257


State 252

  159 designator: LEFT_SQUARE_BRACKET constant-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 159 (designator)


State 253

  151 initializer: LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 151 (initializer)


State 254

  153 initializer-list: initializer-list COMMA designationopt • initializer

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_CURLY_BRACKET  shift, and go to state 63
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 81
    initializer                go to state 286


State 255

  108 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET • enumerator-list RIGHT_CURLY_BRACKET
  110               | ENUM identifieropt LEFT_CURLY_BRACKET • enumerator-list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 287

    enumerator-list  go to state 288
    enumerator       go to state 289


State 256

   70 expression: expression COMMA assignment-expression •

    $default  reduce using rule 70 (expression)


State 257

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET • initializer-list RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET • initializer-list COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 98
    DOT                  shift, and go to state 99

    $default  reduce using rule 155 (designationopt)

    initializer-list  go to state 290
    designationopt    go to state 101
    designation       go to state 102
    designator-list   go to state 103
    designator        go to state 104


State 258

   34 cast-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS cast-expression •

    $default  reduce using rule 34 (cast-expression)


State 259

    9 postfix-expression: postfix-expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 9 (postfix-expression)


State 260

   18 argument-expression-list: argument-expression-list COMMA • assignment-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 291


State 261

   10 postfix-expression: postfix-expression LEFT_PARENTHESIS argument-expression-listopt RIGHT_PARENTHESIS •

    $default  reduce using rule 10 (postfix-expression)


State 262

   58 inclusive-OR-expression: inclusive-OR-expression • OR exclusive-OR-expression
   60 logical-AND-expression: logical-AND-expression AND_AND M inclusive-OR-expression •

    OR  shift, and go to state 149

    $default  reduce using rule 60 (logical-AND-expression)


State 263

   60 logical-AND-expression: logical-AND-expression • AND_AND M inclusive-OR-expression
   62 logical-OR-expression: logical-OR-expression OR_OR M logical-AND-expression •

    AND_AND  shift, and go to state 150

    $default  reduce using rule 62 (logical-OR-expression)


State 264

   64 conditional-expression: logical-OR-expression N QUESTION M • expression N COLON M conditional-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 292


State 265

  172 labeled-statement: IDENTIFIER COLON • statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 228
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    statement                  go to state 293
    labeled-statement          go to state 232
    compound-statement         go to state 233
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 266

  173 labeled-statement: CASE constant-expression • COLON statement

    COLON  shift, and go to state 294


State 267

  174 labeled-statement: DEFAULT COLON • statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 228
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    statement                  go to state 295
    labeled-statement          go to state 232
    compound-statement         go to state 233
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 268

  188 selection-statement: SWITCH LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 296


State 269

  189 iteration-statement: WHILE W • LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W • LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 297


State 270

  191 iteration-statement: DO D • M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  192                    | DO D • LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_CURLY_BRACKET  shift, and go to state 298

    $default  reduce using rule 65 (M)

    M  go to state 299


State 271

  193 iteration-statement: FOR F • LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F • LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F • LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  196                    | FOR F • LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 300


State 272

  200 jump-statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 301


State 273

  201 jump-statement: CONTINUE SEMICOLON •

    $default  reduce using rule 201 (jump-statement)


State 274

  202 jump-statement: BREAK SEMICOLON •

    $default  reduce using rule 202 (jump-statement)


State 275

  204 jump-statement: RETURN SEMICOLON •

    $default  reduce using rule 204 (jump-statement)


State 276

   70 expression: expression • COMMA assignment-expression
  203 jump-statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 302
    COMMA      shift, and go to state 184


State 277

  186 selection-statement: IF LEFT_PARENTHESIS • expression N RIGHT_PARENTHESIS M statement N
  187                    | IF LEFT_PARENTHESIS • expression N RIGHT_PARENTHESIS M statement N ELSE M statement

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 303


State 278

  175 compound-statement: LEFT_CURLY_BRACKET A • change-table block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 177 (change-table)

    change-table  go to state 304


State 279

  184 expression-statement: expression SEMICOLON •

    $default  reduce using rule 184 (expression-statement)


State 280

  209 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 209 (function-definition)


State 281

  181 block-item-list: block-item-list M • block-item

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item                 go to state 305
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 282

  126 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 126 (direct-declarator)


State 283

  128 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 128 (direct-declarator)


State 284

  141 parameter-type-list: parameter-list COMMA ELLIPSIS •

    $default  reduce using rule 141 (parameter-type-list)


State 285

  143 parameter-list: parameter-list COMMA parameter-declaration •

    $default  reduce using rule 143 (parameter-list)


State 286

  153 initializer-list: initializer-list COMMA designationopt initializer •

    $default  reduce using rule 153 (initializer-list)


State 287

  115 enumerator: IDENTIFIER •
  116           | IDENTIFIER • EQUALS constant-expression

    EQUALS  shift, and go to state 306

    $default  reduce using rule 115 (enumerator)


State 288

  108 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list • RIGHT_CURLY_BRACKET
  110               | ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list • COMMA RIGHT_CURLY_BRACKET
  114 enumerator-list: enumerator-list • COMMA enumerator

    COMMA                shift, and go to state 307
    RIGHT_CURLY_BRACKET  shift, and go to state 308


State 289

  113 enumerator-list: enumerator •

    $default  reduce using rule 113 (enumerator-list)


State 290

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list • RIGHT_CURLY_BRACKET
   16                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list • COMMA RIGHT_CURLY_BRACKET
  153 initializer-list: initializer-list • COMMA designationopt initializer

    COMMA                shift, and go to state 309
    RIGHT_CURLY_BRACKET  shift, and go to state 310


State 291

   18 argument-expression-list: argument-expression-list COMMA assignment-expression •

    $default  reduce using rule 18 (argument-expression-list)


State 292

   64 conditional-expression: logical-OR-expression N QUESTION M expression • N COLON M conditional-expression
   70 expression: expression • COMMA assignment-expression

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 311


State 293

  172 labeled-statement: IDENTIFIER COLON statement •

    $default  reduce using rule 172 (labeled-statement)


State 294

  173 labeled-statement: CASE constant-expression COLON • statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 228
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    statement                  go to state 312
    labeled-statement          go to state 232
    compound-statement         go to state 233
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 295

  174 labeled-statement: DEFAULT COLON statement •

    $default  reduce using rule 174 (labeled-statement)


State 296

   70 expression: expression • COMMA assignment-expression
  188 selection-statement: SWITCH LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 313


State 297

  189 iteration-statement: WHILE W LEFT_PARENTHESIS • A change-table M expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS • A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (A)

    A  go to state 314


State 298

  192 iteration-statement: DO D LEFT_CURLY_BRACKET • M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 315


State 299

  191 iteration-statement: DO D M • loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    loop-statement             go to state 316
    labeled-statement          go to state 317
    expression-statement       go to state 318
    selection-statement        go to state 319
    iteration-statement        go to state 320
    jump-statement             go to state 321


State 300

  193 iteration-statement: FOR F LEFT_PARENTHESIS • A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS • A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS • A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  196                    | FOR F LEFT_PARENTHESIS • A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (A)

    A  go to state 322


State 301

  200 jump-statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 200 (jump-statement)


State 302

  203 jump-statement: RETURN expression SEMICOLON •

    $default  reduce using rule 203 (jump-statement)


State 303

   70 expression: expression • COMMA assignment-expression
  186 selection-statement: IF LEFT_PARENTHESIS expression • N RIGHT_PARENTHESIS M statement N
  187                    | IF LEFT_PARENTHESIS expression • N RIGHT_PARENTHESIS M statement N ELSE M statement

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 323


State 304

  175 compound-statement: LEFT_CURLY_BRACKET A change-table • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    $default  reduce using rule 179 (block-item-listopt)

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item-listopt         go to state 324
    block-item-list            go to state 235
    block-item                 go to state 236
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 305

  181 block-item-list: block-item-list M block-item •

    $default  reduce using rule 181 (block-item-list)


State 306

  116 enumerator: IDENTIFIER EQUALS • constant-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 171
    constant-expression        go to state 325


State 307

  110 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA • RIGHT_CURLY_BRACKET
  114 enumerator-list: enumerator-list COMMA • enumerator

    IDENTIFIER           shift, and go to state 287
    RIGHT_CURLY_BRACKET  shift, and go to state 326

    enumerator  go to state 327


State 308

  108 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET •

    $default  reduce using rule 108 (enum-specifier)


State 309

   16 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA • RIGHT_CURLY_BRACKET
  153 initializer-list: initializer-list COMMA • designationopt initializer

    LEFT_SQUARE_BRACKET  shift, and go to state 98
    RIGHT_CURLY_BRACKET  shift, and go to state 328
    DOT                  shift, and go to state 99

    $default  reduce using rule 155 (designationopt)

    designationopt   go to state 254
    designation      go to state 102
    designator-list  go to state 103
    designator       go to state 104


State 310

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET •

    $default  reduce using rule 15 (postfix-expression)


State 311

   64 conditional-expression: logical-OR-expression N QUESTION M expression N • COLON M conditional-expression

    COLON  shift, and go to state 329


State 312

  173 labeled-statement: CASE constant-expression COLON statement •

    $default  reduce using rule 173 (labeled-statement)


State 313

  188 selection-statement: SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 228
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    statement                  go to state 330
    labeled-statement          go to state 232
    compound-statement         go to state 233
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 314

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A • change-table M expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS A • change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 177 (change-table)

    change-table  go to state 331


State 315

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M • block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    $default  reduce using rule 179 (block-item-listopt)

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item-listopt         go to state 332
    block-item-list            go to state 235
    block-item                 go to state 236
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 316

  191 iteration-statement: DO D M loop-statement • M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 333


State 317

  167 loop-statement: labeled-statement •

    $default  reduce using rule 167 (loop-statement)


State 318

  168 loop-statement: expression-statement •

    $default  reduce using rule 168 (loop-statement)


State 319

  169 loop-statement: selection-statement •

    $default  reduce using rule 169 (loop-statement)


State 320

  170 loop-statement: iteration-statement •

    $default  reduce using rule 170 (loop-statement)


State 321

  171 loop-statement: jump-statement •

    $default  reduce using rule 171 (loop-statement)


State 322

  193 iteration-statement: FOR F LEFT_PARENTHESIS A • change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A • change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A • change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  196                    | FOR F LEFT_PARENTHESIS A • change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 177 (change-table)

    change-table  go to state 334


State 323

  186 selection-statement: IF LEFT_PARENTHESIS expression N • RIGHT_PARENTHESIS M statement N
  187                    | IF LEFT_PARENTHESIS expression N • RIGHT_PARENTHESIS M statement N ELSE M statement

    RIGHT_PARENTHESIS  shift, and go to state 335


State 324

  175 compound-statement: LEFT_CURLY_BRACKET A change-table block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 336


State 325

  116 enumerator: IDENTIFIER EQUALS constant-expression •

    $default  reduce using rule 116 (enumerator)


State 326

  110 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 110 (enum-specifier)


State 327

  114 enumerator-list: enumerator-list COMMA enumerator •

    $default  reduce using rule 114 (enumerator-list)


State 328

   16 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 16 (postfix-expression)


State 329

   64 conditional-expression: logical-OR-expression N QUESTION M expression N COLON • M conditional-expression

    $default  reduce using rule 65 (M)

    M  go to state 337


State 330

  188 selection-statement: SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement •

    $default  reduce using rule 188 (selection-statement)


State 331

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table • M expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS A change-table • M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 338


State 332

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt • RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    RIGHT_CURLY_BRACKET  shift, and go to state 339


State 333

  191 iteration-statement: DO D M loop-statement M • WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 340


State 334

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table • declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table • expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table • declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  196                    | FOR F LEFT_PARENTHESIS A change-table • expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 48
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    SIZEOF                   shift, and go to state 53
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 341
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    expression-statement       go to state 342


State 335

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS • M statement N
  187                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS • M statement N ELSE M statement

    $default  reduce using rule 65 (M)

    M  go to state 343


State 336

  175 compound-statement: LEFT_CURLY_BRACKET A change-table block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 175 (compound-statement)


State 337

   64 conditional-expression: logical-OR-expression N QUESTION M expression N COLON M • conditional-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 132
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 344


State 338

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M • expression RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS A change-table M • expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 345


State 339

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET • M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 346


State 340

  191 iteration-statement: DO D M loop-statement M WHILE • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 347


State 341

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration • M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration • M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 348


State 342

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement • M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement • M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 349


State 343

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M • statement N
  187                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M • statement N ELSE M statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 228
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    statement                  go to state 350
    labeled-statement          go to state 232
    compound-statement         go to state 233
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 344

   64 conditional-expression: logical-OR-expression N QUESTION M expression N COLON M conditional-expression •

    $default  reduce using rule 64 (conditional-expression)


State 345

   70 expression: expression • COMMA assignment-expression
  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression • RIGHT_PARENTHESIS M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS A change-table M expression • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 351


State 346

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M • WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 352


State 347

  191 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 353


State 348

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M • expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M • expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    expression-statement       go to state 354


State 349

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M • expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M • expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    expression-statement       go to state 355


State 350

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement • N
  187                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement • N ELSE M statement

    $default  reduce using rule 66 (N)

    N  go to state 356


State 351

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS • M loop-statement
  190                    | WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 357

    $default  reduce using rule 65 (M)

    M  go to state 358


State 352

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 359


State 353

   70 expression: expression • COMMA assignment-expression
  191 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS SEMICOLON

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 360


State 354

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement • M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement • M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 361


State 355

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement • M expression N RIGHT_PARENTHESIS M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement • M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 362


State 356

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N •
  187                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N • ELSE M statement

    ELSE  shift, and go to state 363

    $default  reduce using rule 186 (selection-statement)


State 357

  190 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET • M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 364


State 358

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M • loop-statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    loop-statement             go to state 365
    labeled-statement          go to state 317
    expression-statement       go to state 318
    selection-statement        go to state 319
    iteration-statement        go to state 320
    jump-statement             go to state 321


State 359

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 366


State 360

  191 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 367


State 361

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M • expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M • expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 368


State 362

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M • expression N RIGHT_PARENTHESIS M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M • expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    ENUMERATION_CONST   shift, and go to state 54
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 369


State 363

  187 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE • M statement

    $default  reduce using rule 65 (M)

    M  go to state 370


State 364

  190 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    $default  reduce using rule 179 (block-item-listopt)

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item-listopt         go to state 371
    block-item-list            go to state 235
    block-item                 go to state 236
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 365

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement •

    $default  reduce using rule 189 (iteration-statement)


State 366

   70 expression: expression • COMMA assignment-expression
  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS SEMICOLON

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 372


State 367

  191 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON •

    $default  reduce using rule 191 (iteration-statement)


State 368

   70 expression: expression • COMMA assignment-expression
  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression • N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression • N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 373


State 369

   70 expression: expression • COMMA assignment-expression
  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression • N RIGHT_PARENTHESIS M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression • N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 374


State 370

  187 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M • statement

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 228
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    statement                  go to state 375
    labeled-statement          go to state 232
    compound-statement         go to state 233
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 371

  190 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 376


State 372

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 377


State 373

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N • RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N • RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 378


State 374

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N • RIGHT_PARENTHESIS M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N • RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 379


State 375

  187 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M statement •

    $default  reduce using rule 187 (selection-statement)


State 376

  190 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 190 (iteration-statement)


State 377

  192 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON •

    $default  reduce using rule 192 (iteration-statement)


State 378

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS • M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS • M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 380


State 379

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS • M loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS • M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 65 (M)

    M  go to state 381


State 380

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M • loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M • LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 382
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    loop-statement             go to state 383
    labeled-statement          go to state 317
    expression-statement       go to state 318
    selection-statement        go to state 319
    iteration-statement        go to state 320
    jump-statement             go to state 321


State 381

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M • loop-statement
  196                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M • LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 215
    INTEGER             shift, and go to state 49
    FLOAT               shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 216
    DEFAULT             shift, and go to state 217
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 218
    WHILE               shift, and go to state 219
    DO                  shift, and go to state 220
    FOR                 shift, and go to state 221
    GOTO                shift, and go to state 222
    CONTINUE            shift, and go to state 223
    BREAK               shift, and go to state 224
    RETURN              shift, and go to state 225
    ENUMERATION_CONST   shift, and go to state 54
    IF                  shift, and go to state 226
    INCREMENT           shift, and go to state 55
    DECREMENT           shift, and go to state 56
    AND                 shift, and go to state 57
    STAR                shift, and go to state 58
    PLUS                shift, and go to state 59
    MINUS               shift, and go to state 60
    TILDE               shift, and go to state 61
    NOT                 shift, and go to state 62
    SEMICOLON           shift, and go to state 227
    LEFT_CURLY_BRACKET  shift, and go to state 384
    LEFT_PARENTHESIS    shift, and go to state 64

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    loop-statement             go to state 385
    labeled-statement          go to state 317
    expression-statement       go to state 318
    selection-statement        go to state 319
    iteration-statement        go to state 320
    jump-statement             go to state 321


State 382

  195 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    $default  reduce using rule 179 (block-item-listopt)

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item-listopt         go to state 386
    block-item-list            go to state 235
    block-item                 go to state 236
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 383

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement •

    $default  reduce using rule 193 (iteration-statement)


State 384

  196 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 215
    INTEGER                  shift, and go to state 49
    FLOAT                    shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 216
    DEFAULT                  shift, and go to state 217
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 218
    WHILE                    shift, and go to state 219
    DO                       shift, and go to state 220
    FOR                      shift, and go to state 221
    GOTO                     shift, and go to state 222
    CONTINUE                 shift, and go to state 223
    BREAK                    shift, and go to state 224
    RETURN                   shift, and go to state 225
    TYPE_QUALIFIER           shift, and go to state 5
    ENUMERATION_CONST        shift, and go to state 54
    IF                       shift, and go to state 226
    INCREMENT                shift, and go to state 55
    DECREMENT                shift, and go to state 56
    AND                      shift, and go to state 57
    STAR                     shift, and go to state 58
    PLUS                     shift, and go to state 59
    MINUS                    shift, and go to state 60
    TILDE                    shift, and go to state 61
    NOT                      shift, and go to state 62
    SEMICOLON                shift, and go to state 227
    LEFT_CURLY_BRACKET       shift, and go to state 228
    LEFT_PARENTHESIS         shift, and go to state 64

    $default  reduce using rule 179 (block-item-listopt)

    primary-expression         go to state 65
    postfix-expression         go to state 66
    unary-expression           go to state 67
    unary-operator             go to state 68
    cast-expression            go to state 69
    multiplicative-expression  go to state 70
    additive-expression        go to state 71
    shift-expression           go to state 72
    relational-expression      go to state 73
    equality-expression        go to state 74
    AND-expression             go to state 75
    exclusive-OR-expression    go to state 76
    inclusive-OR-expression    go to state 77
    logical-AND-expression     go to state 78
    logical-OR-expression      go to state 79
    conditional-expression     go to state 80
    assignment-expression      go to state 119
    expression                 go to state 229
    declaration                go to state 230
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 231
    labeled-statement          go to state 232
    compound-statement         go to state 233
    block-item-listopt         go to state 387
    block-item-list            go to state 235
    block-item                 go to state 236
    expression-statement       go to state 237
    selection-statement        go to state 238
    iteration-statement        go to state 239
    jump-statement             go to state 240


State 385

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement •

    $default  reduce using rule 194 (iteration-statement)


State 386

  195 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 388


State 387

  196 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 389


State 388

  195 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 195 (iteration-statement)


State 389

  196 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 196 (iteration-statement)
