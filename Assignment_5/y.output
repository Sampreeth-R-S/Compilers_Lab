Nonterminals useless in grammar

    init-declarator-listopt


Terminals unused in grammar

    OF
    KEYWORD
    ENUMERATION_CONST
    PUNCTUATOR
    SINGLE_LINE_COMMENT
    MULTI_LINE_COMMENT
    ERROR


Rules useless in grammar

  213 init-declarator-listopt: init-declarator-list
  214                        | ε


Grammar

    0 $accept: translation-unit $end

    1 primary-expression: IDENTIFIER
    2                   | INTEGER
    3                   | FLOATING_CONSTANT
    4                   | CHARACTER_CONSTANT
    5                   | STRING_LITERAL
    6                   | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    7 postfix-expression: primary-expression
    8                   | postfix-expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
    9                   | postfix-expression LEFT_PARENTHESIS argument-expression-listopt RIGHT_PARENTHESIS
   10                   | postfix-expression DOT IDENTIFIER
   11                   | postfix-expression ARROW IDENTIFIER
   12                   | postfix-expression INCREMENT
   13                   | postfix-expression DECREMENT
   14                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

   16 argument-expression-list: assignment-expression
   17                         | argument-expression-list COMMA assignment-expression

   18 argument-expression-listopt: argument-expression-list
   19                            | ε

   20 unary-expression: postfix-expression
   21                 | INCREMENT unary-expression
   22                 | DECREMENT unary-expression
   23                 | unary-operator cast-expression
   24                 | SIZEOF unary-expression
   25                 | SIZEOF LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS

   26 unary-operator: AND
   27               | STAR
   28               | PLUS
   29               | MINUS
   30               | TILDE
   31               | NOT

   32 cast-expression: unary-expression
   33                | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS cast-expression

   34 multiplicative-expression: cast-expression
   35                          | multiplicative-expression STAR cast-expression
   36                          | multiplicative-expression DIV cast-expression
   37                          | multiplicative-expression MOD cast-expression

   38 additive-expression: multiplicative-expression
   39                    | additive-expression PLUS multiplicative-expression
   40                    | additive-expression MINUS multiplicative-expression

   41 shift-expression: additive-expression
   42                 | shift-expression LEFT_SHIFT additive-expression
   43                 | shift-expression RIGHT_SHIFT additive-expression

   44 relational-expression: shift-expression
   45                      | relational-expression LESS_THAN shift-expression
   46                      | relational-expression GREATER_THAN shift-expression
   47                      | relational-expression LESS_THAN_EQUAL shift-expression
   48                      | relational-expression GREATER_THAN_EQUAL shift-expression

   49 equality-expression: relational-expression
   50                    | equality-expression EQUAL_TO relational-expression
   51                    | equality-expression NOT_EQUAL_TO relational-expression

   52 AND-expression: equality-expression
   53               | AND-expression AND equality-expression

   54 exclusive-OR-expression: AND-expression
   55                        | exclusive-OR-expression XOR AND-expression

   56 inclusive-OR-expression: exclusive-OR-expression
   57                        | inclusive-OR-expression OR exclusive-OR-expression

   58 logical-AND-expression: inclusive-OR-expression
   59                       | logical-AND-expression AND_AND M inclusive-OR-expression

   60 logical-OR-expression: logical-AND-expression
   61                      | logical-OR-expression OR_OR M logical-AND-expression

   62 conditional-expression: logical-OR-expression
   63                       | logical-OR-expression N QUESTION M expression N COLON M conditional-expression

   64 M: ε

   65 N: ε

   66 assignment-expression: conditional-expression
   67                      | unary-expression assignment-operator assignment-expression

   68 assignment-operator: EQUALS
   69                    | ASSIGNMENT_OPERATOR

   70 expression: assignment-expression
   71           | expression COMMA assignment-expression

   72 constant-expression: conditional-expression

   73 declaration: declaration-specifiers init-declarator-list SEMICOLON
   74            | declaration-specifiers SEMICOLON

   75 declaration-specifiers: storage-class-specifier declaration-specifiers
   76                       | storage-class-specifier
   77                       | TYPE_SPECIFIER_TOKEN declaration-specifiers
   78                       | TYPE_SPECIFIER_TOKEN
   79                       | type-qualifier declaration-specifiers
   80                       | type-qualifier
   81                       | function-specifier declaration-specifiers
   82                       | function-specifier

   83 type-qualifier: TYPE_QUALIFIER

   84 init-declarator-list: init-declarator
   85                     | init-declarator-list COMMA init-declarator

   86 init-declarator: declarator
   87                | declarator EQUALS initializer

   88 type-specifier: VOID
   89               | CHAR
   90               | SHORT
   91               | INT
   92               | LONG
   93               | FLOAT
   94               | DOUBLE
   95               | SIGNED
   96               | UNSIGNED
   97               | BOOL
   98               | COMPLEX
   99               | IMAGINARY
  100               | enum-specifier

  101 storage-class-specifier: STORAGE_CLASS_SPECIFIER
  102                        | STATIC_TOKEN

  103 specifier-qualifier-list: type-specifier specifier-qualifier-listopt
  104                         | TYPE_QUALIFIER specifier-qualifier-listopt

  105 specifier-qualifier-listopt: specifier-qualifier-list
  106                            | ε

  107 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET
  108               | ENUM IDENTIFIER
  109               | ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET

  110 identifieropt: IDENTIFIER
  111              | ε

  112 enumerator-list: enumerator
  113                | enumerator-list COMMA enumerator

  114 enumerator: IDENTIFIER
  115           | IDENTIFIER EQUALS constant-expression

  116 function-specifier: FUNCTION_SPECIFIER

  117 declarator: pointer direct-declarator
  118           | direct-declarator

  119 direct-declarator: IDENTIFIER
  120                  | LEFT_PARENTHESIS declarator RIGHT_PARENTHESIS
  121                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET
  122                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  123                  | direct-declarator LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  125                  | direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  126                  | direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  129                  | direct-declarator LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS
  131                  | direct-declarator LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS
  132                  | direct-declarator LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS

  133 type-qualifier-listopt: type-qualifier-list
  134                       | ε

  135 pointer: STAR type-qualifier-listopt
  136        | STAR type-qualifier-listopt pointer

  137 type-qualifier-list: TYPE_QUALIFIER
  138                    | type-qualifier-list TYPE_QUALIFIER

  139 parameter-type-list: parameter-list
  140                    | parameter-list COMMA ELLIPSIS

  141 parameter-list: parameter-declaration
  142               | parameter-list COMMA parameter-declaration

  143 parameter-declaration: declaration-specifiers declarator
  144                      | declaration-specifiers

  145 identifier-list: IDENTIFIER
  146                | identifier-list COMMA IDENTIFIER

  147 type-name: specifier-qualifier-list

  148 initializer: assignment-expression
  149            | LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
  150            | LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

  151 initializer-list: designationopt initializer
  152                 | initializer-list COMMA designationopt initializer

  153 designationopt: designation
  154               | ε

  155 designation: designator-list EQUALS

  156 designator-list: designator
  157                | designator-list designator

  158 designator: LEFT_SQUARE_BRACKET constant-expression RIGHT_SQUARE_BRACKET
  159           | DOT IDENTIFIER

  160 statement: labeled-statement
  161          | compound-statement
  162          | expression-statement
  163          | selection-statement
  164          | iteration-statement
  165          | jump-statement

  166 loop-statement: labeled-statement
  167               | expression-statement
  168               | selection-statement
  169               | iteration-statement
  170               | jump-statement

  171 labeled-statement: IDENTIFIER COLON statement
  172                  | CASE constant-expression COLON statement
  173                  | DEFAULT COLON statement

  174 compound-statement: LEFT_CURLY_BRACKET A change-table block-item-listopt RIGHT_CURLY_BRACKET

  175 A: ε

  176 change-table: ε

  177 block-item-listopt: block-item-list
  178                   | ε

  179 block-item-list: block-item
  180                | block-item-list M block-item

  181 block-item: declaration
  182           | statement

  183 expression-statement: expression SEMICOLON
  184                     | SEMICOLON

  185 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N
  186                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M statement
  187                    | SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET
  190                    | DO D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  191                    | DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  192                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  193                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

  196 F: ε

  197 W: ε

  198 D: ε

  199 jump-statement: GOTO IDENTIFIER SEMICOLON
  200               | CONTINUE SEMICOLON
  201               | BREAK SEMICOLON
  202               | RETURN expression SEMICOLON
  203               | RETURN SEMICOLON

  204 translation-unit: external-declaration
  205                 | translation-unit external-declaration

  206 external-declaration: function-definition
  207                     | declaration

  208 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

  209 declaration-listopt: declaration-list
  210                    | ε

  211 declaration-list: declaration
  212                 | declaration-list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <pointer> (258) 1 10 11 108 110 114 115 119 145 146 159 171 199
    INTEGER <intval> (259) 2
    FLOATING_CONSTANT <floatval> (260) 3
    CHARACTER_CONSTANT <charval> (261) 4
    STRING_LITERAL <charval> (262) 5
    ENUM (263) 107 108 109
    TYPE_SPECIFIER_TOKEN (264) 77 78
    STORAGE_CLASS_SPECIFIER (265) 101
    STATIC_TOKEN (266) 102 125 126 127
    FUNCTION_SPECIFIER (267) 116
    CASE (268) 172
    DEFAULT (269) 173
    SIZEOF (270) 24 25
    OF (271)
    ELSE (272) 186
    SWITCH (273) 187
    WHILE (274) 188 189 190 191
    DO (275) 190 191
    FOR (276) 192 193 194 195
    GOTO (277) 199
    CONTINUE (278) 200
    BREAK (279) 201
    RETURN (280) 202 203
    TYPE_QUALIFIER (281) 83 104 137 138
    KEYWORD (282)
    ENUMERATION_CONST (283)
    FLOAT (284) 93
    PUNCTUATOR (285)
    ASSIGNMENT_OPERATOR (286) 69
    SINGLE_LINE_COMMENT (287)
    MULTI_LINE_COMMENT (288)
    ERROR (289)
    VOID (290) 88
    CHAR (291) 89
    SHORT (292) 90
    INT (293) 91
    LONG (294) 92
    DOUBLE (295) 94
    SIGNED (296) 95
    UNSIGNED (297) 96
    BOOL (298) 97
    COMPLEX (299) 98
    IMAGINARY (300) 99
    IF (301) 185 186
    EQUALS (302) 68 87 115 155
    INCREMENT (303) 12 21
    DECREMENT (304) 13 22
    AND (305) 26 53
    STAR (306) 27 35 128 129 135 136
    PLUS (307) 28 39
    MINUS (308) 29 40
    TILDE (309) 30
    NOT (310) 31
    DIV (311) 36
    MOD (312) 37
    LEFT_SHIFT (313) 42
    RIGHT_SHIFT (314) 43
    LESS_THAN (315) 45
    GREATER_THAN (316) 46
    LESS_THAN_EQUAL (317) 47
    GREATER_THAN_EQUAL (318) 48
    EQUAL_TO (319) 50
    NOT_EQUAL_TO (320) 51
    XOR (321) 55
    OR (322) 57
    AND_AND (323) 59
    OR_OR (324) 61
    QUESTION (325) 63
    COLON (326) 63 171 172 173
    SEMICOLON (327) 73 74 183 184 190 191 199 200 201 202 203
    COMMA (328) 15 17 71 85 109 113 140 142 146 150 152
    LEFT_SQUARE_BRACKET (329) 8 121 122 123 124 125 126 127 128 129 158
    RIGHT_SQUARE_BRACKET (330) 8 121 122 123 124 125 126 127 128 129 158
    LEFT_CURLY_BRACKET (331) 14 15 107 109 149 150 174 189 191 194 195 208
    RIGHT_CURLY_BRACKET (332) 14 15 107 109 149 150 174 189 191 194 195 208
    LEFT_PARENTHESIS (333) 6 9 14 15 25 33 120 130 131 132 185 186 187 188 189 190 191 192 193 194 195
    RIGHT_PARENTHESIS (334) 6 9 14 15 25 33 120 130 131 132 185 186 187 188 189 190 191 192 193 194 195
    DOT (335) 10 159
    ELLIPSIS (336) 140
    ARROW (337) 11
    LOWER_THAN_ELSE (338)


Nonterminals, with rules where they appear

    $accept (84)
        on left: 0
    primary-expression <exp> (85)
        on left: 1 2 3 4 5 6
        on right: 7
    postfix-expression <Array> (86)
        on left: 7 8 9 10 11 12 13 14 15
        on right: 8 9 10 11 12 13 20
    argument-expression-list <numParams> (87)
        on left: 16 17
        on right: 17 18
    argument-expression-listopt <numParams> (88)
        on left: 18 19
        on right: 9
    unary-expression <Array> (89)
        on left: 20 21 22 23 24 25
        on right: 21 22 24 32 67
    unary-operator <unaryOp> (90)
        on left: 26 27 28 29 30 31
        on right: 23
    cast-expression <Array> (91)
        on left: 32 33
        on right: 23 33 34 35 36 37
    multiplicative-expression <exp> (92)
        on left: 34 35 36 37
        on right: 35 36 37 38 39 40
    additive-expression <exp> (93)
        on left: 38 39 40
        on right: 39 40 41 42 43
    shift-expression <exp> (94)
        on left: 41 42 43
        on right: 42 43 44 45 46 47 48
    relational-expression <exp> (95)
        on left: 44 45 46 47 48
        on right: 45 46 47 48 49 50 51
    equality-expression <exp> (96)
        on left: 49 50 51
        on right: 50 51 52 53
    AND-expression <exp> (97)
        on left: 52 53
        on right: 53 54 55
    exclusive-OR-expression <exp> (98)
        on left: 54 55
        on right: 55 56 57
    inclusive-OR-expression <exp> (99)
        on left: 56 57
        on right: 57 58 59
    logical-AND-expression <exp> (100)
        on left: 58 59
        on right: 59 60 61
    logical-OR-expression <exp> (101)
        on left: 60 61
        on right: 61 62 63
    conditional-expression <exp> (102)
        on left: 62 63
        on right: 63 66 72
    M <instr> (103)
        on left: 64
        on right: 59 61 63 180 185 186 188 189 190 191 192 193 194 195
    N <stmt> (104)
        on left: 65
        on right: 63 185 186 192 193 194 195
    assignment-expression <exp> (105)
        on left: 66 67
        on right: 16 17 67 70 71 122 123 125 126 127 148
    assignment-operator (106)
        on left: 68 69
        on right: 67
    expression <exp> (107)
        on left: 70 71
        on right: 6 8 63 71 183 185 186 187 188 189 190 191 192 193 194 195 202
    constant-expression (108)
        on left: 72
        on right: 115 158 172
    declaration (109)
        on left: 73 74
        on right: 181 192 194 207 211 212
    declaration-specifiers (110)
        on left: 75 76 77 78 79 80 81 82
        on right: 73 74 75 77 79 81 143 144 208
    type-qualifier (111)
        on left: 83
        on right: 79 80
    init-declarator-list (112)
        on left: 84 85
        on right: 73 85
    init-declarator <pointer> (113)
        on left: 86 87
        on right: 84 85
    type-specifier (114)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100
        on right: 103
    storage-class-specifier (115)
        on left: 101 102
        on right: 75 76
    specifier-qualifier-list (116)
        on left: 103 104
        on right: 105 147
    specifier-qualifier-listopt (117)
        on left: 105 106
        on right: 103 104
    enum-specifier (118)
        on left: 107 108 109
        on right: 100
    identifieropt (119)
        on left: 110 111
        on right: 107 109
    enumerator-list (120)
        on left: 112 113
        on right: 107 109 113
    enumerator (121)
        on left: 114 115
        on right: 112 113
    function-specifier (122)
        on left: 116
        on right: 81 82
    declarator <pointer> (123)
        on left: 117 118
        on right: 86 87 120 143 208
    direct-declarator <pointer> (124)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132
        on right: 117 118 121 122 123 124 125 126 127 128 129 130 131 132
    type-qualifier-listopt (125)
        on left: 133 134
        on right: 135 136
    pointer <ptr> (126)
        on left: 135 136
        on right: 117 136
    type-qualifier-list (127)
        on left: 137 138
        on right: 121 122 125 127 128 133 138
    parameter-type-list (128)
        on left: 139 140
        on right: 130
    parameter-list (129)
        on left: 141 142
        on right: 139 140 142
    parameter-declaration (130)
        on left: 143 144
        on right: 141 142
    identifier-list (131)
        on left: 145 146
        on right: 131 146
    type-name (132)
        on left: 147
        on right: 14 15 25 33
    initializer <pointer> (133)
        on left: 148 149 150
        on right: 87 151 152
    initializer-list (134)
        on left: 151 152
        on right: 14 15 149 150 152
    designationopt (135)
        on left: 153 154
        on right: 151 152
    designation (136)
        on left: 155
        on right: 153
    designator-list (137)
        on left: 156 157
        on right: 155 157
    designator (138)
        on left: 158 159
        on right: 156 157
    statement <stmt> (139)
        on left: 160 161 162 163 164 165
        on right: 171 172 173 182 185 186 187
    loop-statement <stmt> (140)
        on left: 166 167 168 169 170
        on right: 188 190 192 193
    labeled-statement <stmt> (141)
        on left: 171 172 173
        on right: 160 166
    compound-statement <stmt> (142)
        on left: 174
        on right: 161
    A (143)
        on left: 175
        on right: 174 188 189 192 193 194 195
    change-table (144)
        on left: 176
        on right: 130 132 174 188 189 192 193 194 195 208
    block-item-listopt <stmt> (145)
        on left: 177 178
        on right: 174 189 191 194 195 208
    block-item-list <stmt> (146)
        on left: 179 180
        on right: 177 180
    block-item <stmt> (147)
        on left: 181 182
        on right: 179 180
    expression-statement <exp> (148)
        on left: 183 184
        on right: 162 167 192 193 194 195
    selection-statement <stmt> (149)
        on left: 185 186 187
        on right: 163 168
    iteration-statement <stmt> (150)
        on left: 188 189 190 191 192 193 194 195
        on right: 164 169
    F (151)
        on left: 196
        on right: 192 193 194 195
    W (152)
        on left: 197
        on right: 188 189
    D (153)
        on left: 198
        on right: 190 191
    jump-statement <stmt> (154)
        on left: 199 200 201 202 203
        on right: 165 170
    translation-unit (155)
        on left: 204 205
        on right: 0 205
    external-declaration (156)
        on left: 206 207
        on right: 204 205
    function-definition (157)
        on left: 208
        on right: 206
    declaration-listopt (158)
        on left: 209 210
        on right: 208
    declaration-list (159)
        on left: 211 212
        on right: 209 212


State 0

    0 $accept: • translation-unit $end

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    declaration              go to state 6
    declaration-specifiers   go to state 7
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    translation-unit         go to state 11
    external-declaration     go to state 12
    function-definition      go to state 13


State 1

   77 declaration-specifiers: TYPE_SPECIFIER_TOKEN • declaration-specifiers
   78                       | TYPE_SPECIFIER_TOKEN •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 78 (declaration-specifiers)

    declaration-specifiers   go to state 14
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 2

  101 storage-class-specifier: STORAGE_CLASS_SPECIFIER •

    $default  reduce using rule 101 (storage-class-specifier)


State 3

  102 storage-class-specifier: STATIC_TOKEN •

    $default  reduce using rule 102 (storage-class-specifier)


State 4

  116 function-specifier: FUNCTION_SPECIFIER •

    $default  reduce using rule 116 (function-specifier)


State 5

   83 type-qualifier: TYPE_QUALIFIER •

    $default  reduce using rule 83 (type-qualifier)


State 6

  207 external-declaration: declaration •

    $default  reduce using rule 207 (external-declaration)


State 7

   73 declaration: declaration-specifiers • init-declarator-list SEMICOLON
   74            | declaration-specifiers • SEMICOLON
  208 function-definition: declaration-specifiers • declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    SEMICOLON         shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18

    init-declarator-list  go to state 19
    init-declarator       go to state 20
    declarator            go to state 21
    direct-declarator     go to state 22
    pointer               go to state 23


State 8

   79 declaration-specifiers: type-qualifier • declaration-specifiers
   80                       | type-qualifier •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 80 (declaration-specifiers)

    declaration-specifiers   go to state 24
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 9

   75 declaration-specifiers: storage-class-specifier • declaration-specifiers
   76                       | storage-class-specifier •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 76 (declaration-specifiers)

    declaration-specifiers   go to state 25
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 10

   81 declaration-specifiers: function-specifier • declaration-specifiers
   82                       | function-specifier •

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 82 (declaration-specifiers)

    declaration-specifiers   go to state 26
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 11

    0 $accept: translation-unit • $end
  205 translation-unit: translation-unit • external-declaration

    $end                     shift, and go to state 27
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    declaration              go to state 6
    declaration-specifiers   go to state 7
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    external-declaration     go to state 28
    function-definition      go to state 13


State 12

  204 translation-unit: external-declaration •

    $default  reduce using rule 204 (translation-unit)


State 13

  206 external-declaration: function-definition •

    $default  reduce using rule 206 (external-declaration)


State 14

   77 declaration-specifiers: TYPE_SPECIFIER_TOKEN declaration-specifiers •

    $default  reduce using rule 77 (declaration-specifiers)


State 15

  119 direct-declarator: IDENTIFIER •

    $default  reduce using rule 119 (direct-declarator)


State 16

  135 pointer: STAR • type-qualifier-listopt
  136        | STAR • type-qualifier-listopt pointer

    TYPE_QUALIFIER  shift, and go to state 29

    $default  reduce using rule 134 (type-qualifier-listopt)

    type-qualifier-listopt  go to state 30
    type-qualifier-list     go to state 31


State 17

   74 declaration: declaration-specifiers SEMICOLON •

    $default  reduce using rule 74 (declaration)


State 18

  120 direct-declarator: LEFT_PARENTHESIS • declarator RIGHT_PARENTHESIS

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18

    declarator         go to state 32
    direct-declarator  go to state 22
    pointer            go to state 23


State 19

   73 declaration: declaration-specifiers init-declarator-list • SEMICOLON
   85 init-declarator-list: init-declarator-list • COMMA init-declarator

    SEMICOLON  shift, and go to state 33
    COMMA      shift, and go to state 34


State 20

   84 init-declarator-list: init-declarator •

    $default  reduce using rule 84 (init-declarator-list)


State 21

   86 init-declarator: declarator •
   87                | declarator • EQUALS initializer
  208 function-definition: declaration-specifiers declarator • declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5
    EQUALS                   shift, and go to state 35

    LEFT_CURLY_BRACKET  reduce using rule 210 (declaration-listopt)
    $default            reduce using rule 86 (init-declarator)

    declaration              go to state 36
    declaration-specifiers   go to state 37
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    declaration-listopt      go to state 38
    declaration-list         go to state 39


State 22

  118 declarator: direct-declarator •
  121 direct-declarator: direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET
  122                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  123                  | direct-declarator • LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator • LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  125                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  126                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  129                  | direct-declarator • LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator • LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS
  131                  | direct-declarator • LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS
  132                  | direct-declarator • LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 40
    LEFT_PARENTHESIS     shift, and go to state 41

    $default  reduce using rule 118 (declarator)


State 23

  117 declarator: pointer • direct-declarator

    IDENTIFIER        shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 18

    direct-declarator  go to state 42


State 24

   79 declaration-specifiers: type-qualifier declaration-specifiers •

    $default  reduce using rule 79 (declaration-specifiers)


State 25

   75 declaration-specifiers: storage-class-specifier declaration-specifiers •

    $default  reduce using rule 75 (declaration-specifiers)


State 26

   81 declaration-specifiers: function-specifier declaration-specifiers •

    $default  reduce using rule 81 (declaration-specifiers)


State 27

    0 $accept: translation-unit $end •

    $default  accept


State 28

  205 translation-unit: translation-unit external-declaration •

    $default  reduce using rule 205 (translation-unit)


State 29

  137 type-qualifier-list: TYPE_QUALIFIER •

    $default  reduce using rule 137 (type-qualifier-list)


State 30

  135 pointer: STAR type-qualifier-listopt •
  136        | STAR type-qualifier-listopt • pointer

    STAR  shift, and go to state 16

    $default  reduce using rule 135 (pointer)

    pointer  go to state 43


State 31

  133 type-qualifier-listopt: type-qualifier-list •
  138 type-qualifier-list: type-qualifier-list • TYPE_QUALIFIER

    TYPE_QUALIFIER  shift, and go to state 44

    $default  reduce using rule 133 (type-qualifier-listopt)


State 32

  120 direct-declarator: LEFT_PARENTHESIS declarator • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 45


State 33

   73 declaration: declaration-specifiers init-declarator-list SEMICOLON •

    $default  reduce using rule 73 (declaration)


State 34

   85 init-declarator-list: init-declarator-list COMMA • init-declarator

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18

    init-declarator    go to state 46
    declarator         go to state 47
    direct-declarator  go to state 22
    pointer            go to state 23


State 35

   87 init-declarator: declarator EQUALS • initializer

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_CURLY_BRACKET  shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 80
    initializer                go to state 81


State 36

  211 declaration-list: declaration •

    $default  reduce using rule 211 (declaration-list)


State 37

   73 declaration: declaration-specifiers • init-declarator-list SEMICOLON
   74            | declaration-specifiers • SEMICOLON

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    SEMICOLON         shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18

    init-declarator-list  go to state 19
    init-declarator       go to state 20
    declarator            go to state 47
    direct-declarator     go to state 22
    pointer               go to state 23


State 38

  208 function-definition: declaration-specifiers declarator declaration-listopt • change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (change-table)

    change-table  go to state 82


State 39

  209 declaration-listopt: declaration-list •
  212 declaration-list: declaration-list • declaration

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5

    $default  reduce using rule 209 (declaration-listopt)

    declaration              go to state 83
    declaration-specifiers   go to state 37
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10


State 40

  121 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list RIGHT_SQUARE_BRACKET
  122                  | direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  123                  | direct-declarator LEFT_SQUARE_BRACKET • assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator LEFT_SQUARE_BRACKET • RIGHT_SQUARE_BRACKET
  125                  | direct-declarator LEFT_SQUARE_BRACKET • STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  126                  | direct-declarator LEFT_SQUARE_BRACKET • STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator LEFT_SQUARE_BRACKET • type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  129                  | direct-declarator LEFT_SQUARE_BRACKET • STAR RIGHT_SQUARE_BRACKET

    IDENTIFIER            shift, and go to state 48
    INTEGER               shift, and go to state 49
    FLOATING_CONSTANT     shift, and go to state 50
    CHARACTER_CONSTANT    shift, and go to state 51
    STRING_LITERAL        shift, and go to state 52
    STATIC_TOKEN          shift, and go to state 84
    SIZEOF                shift, and go to state 53
    TYPE_QUALIFIER        shift, and go to state 29
    INCREMENT             shift, and go to state 54
    DECREMENT             shift, and go to state 55
    AND                   shift, and go to state 56
    STAR                  shift, and go to state 85
    PLUS                  shift, and go to state 58
    MINUS                 shift, and go to state 59
    TILDE                 shift, and go to state 60
    NOT                   shift, and go to state 61
    RIGHT_SQUARE_BRACKET  shift, and go to state 86
    LEFT_PARENTHESIS      shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 87
    type-qualifier-list        go to state 88


State 41

  130 direct-declarator: direct-declarator LEFT_PARENTHESIS • change-table parameter-type-list RIGHT_PARENTHESIS
  131                  | direct-declarator LEFT_PARENTHESIS • identifier-list RIGHT_PARENTHESIS
  132                  | direct-declarator LEFT_PARENTHESIS • change-table RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 89

    $default  reduce using rule 176 (change-table)

    identifier-list  go to state 90
    change-table     go to state 91


State 42

  117 declarator: pointer direct-declarator •
  121 direct-declarator: direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET
  122                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  123                  | direct-declarator • LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET
  124                  | direct-declarator • LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  125                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  126                  | direct-declarator • LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator • LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET
  129                  | direct-declarator • LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET
  130                  | direct-declarator • LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS
  131                  | direct-declarator • LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS
  132                  | direct-declarator • LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 40
    LEFT_PARENTHESIS     shift, and go to state 41

    $default  reduce using rule 117 (declarator)


State 43

  136 pointer: STAR type-qualifier-listopt pointer •

    $default  reduce using rule 136 (pointer)


State 44

  138 type-qualifier-list: type-qualifier-list TYPE_QUALIFIER •

    $default  reduce using rule 138 (type-qualifier-list)


State 45

  120 direct-declarator: LEFT_PARENTHESIS declarator RIGHT_PARENTHESIS •

    $default  reduce using rule 120 (direct-declarator)


State 46

   85 init-declarator-list: init-declarator-list COMMA init-declarator •

    $default  reduce using rule 85 (init-declarator-list)


State 47

   86 init-declarator: declarator •
   87                | declarator • EQUALS initializer

    EQUALS  shift, and go to state 35

    $default  reduce using rule 86 (init-declarator)


State 48

    1 primary-expression: IDENTIFIER •

    $default  reduce using rule 1 (primary-expression)


State 49

    2 primary-expression: INTEGER •

    $default  reduce using rule 2 (primary-expression)


State 50

    3 primary-expression: FLOATING_CONSTANT •

    $default  reduce using rule 3 (primary-expression)


State 51

    4 primary-expression: CHARACTER_CONSTANT •

    $default  reduce using rule 4 (primary-expression)


State 52

    5 primary-expression: STRING_LITERAL •

    $default  reduce using rule 5 (primary-expression)


State 53

   24 unary-expression: SIZEOF • unary-expression
   25                 | SIZEOF • LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 92

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 93
    unary-operator      go to state 67


State 54

   21 unary-expression: INCREMENT • unary-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 94

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 95
    unary-operator      go to state 67


State 55

   22 unary-expression: DECREMENT • unary-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 94

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 96
    unary-operator      go to state 67


State 56

   26 unary-operator: AND •

    $default  reduce using rule 26 (unary-operator)


State 57

   27 unary-operator: STAR •

    $default  reduce using rule 27 (unary-operator)


State 58

   28 unary-operator: PLUS •

    $default  reduce using rule 28 (unary-operator)


State 59

   29 unary-operator: MINUS •

    $default  reduce using rule 29 (unary-operator)


State 60

   30 unary-operator: TILDE •

    $default  reduce using rule 30 (unary-operator)


State 61

   31 unary-operator: NOT •

    $default  reduce using rule 31 (unary-operator)


State 62

  149 initializer: LEFT_CURLY_BRACKET • initializer-list RIGHT_CURLY_BRACKET
  150            | LEFT_CURLY_BRACKET • initializer-list COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 97
    DOT                  shift, and go to state 98

    $default  reduce using rule 154 (designationopt)

    initializer-list  go to state 99
    designationopt    go to state 100
    designation       go to state 101
    designator-list   go to state 102
    designator        go to state 103


State 63

    6 primary-expression: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   14 postfix-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   33 cast-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    ENUM                shift, and go to state 104
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 105
    FLOAT               shift, and go to state 106
    VOID                shift, and go to state 107
    CHAR                shift, and go to state 108
    SHORT               shift, and go to state 109
    INT                 shift, and go to state 110
    LONG                shift, and go to state 111
    DOUBLE              shift, and go to state 112
    SIGNED              shift, and go to state 113
    UNSIGNED            shift, and go to state 114
    BOOL                shift, and go to state 115
    COMPLEX             shift, and go to state 116
    IMAGINARY           shift, and go to state 117
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 119
    type-specifier             go to state 120
    specifier-qualifier-list   go to state 121
    enum-specifier             go to state 122
    type-name                  go to state 123


State 64

    7 postfix-expression: primary-expression •

    $default  reduce using rule 7 (postfix-expression)


State 65

    8 postfix-expression: postfix-expression • LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
    9                   | postfix-expression • LEFT_PARENTHESIS argument-expression-listopt RIGHT_PARENTHESIS
   10                   | postfix-expression • DOT IDENTIFIER
   11                   | postfix-expression • ARROW IDENTIFIER
   12                   | postfix-expression • INCREMENT
   13                   | postfix-expression • DECREMENT
   20 unary-expression: postfix-expression •

    INCREMENT            shift, and go to state 124
    DECREMENT            shift, and go to state 125
    LEFT_SQUARE_BRACKET  shift, and go to state 126
    LEFT_PARENTHESIS     shift, and go to state 127
    DOT                  shift, and go to state 128
    ARROW                shift, and go to state 129

    $default  reduce using rule 20 (unary-expression)


State 66

   32 cast-expression: unary-expression •
   67 assignment-expression: unary-expression • assignment-operator assignment-expression

    ASSIGNMENT_OPERATOR  shift, and go to state 130
    EQUALS               shift, and go to state 131

    $default  reduce using rule 32 (cast-expression)

    assignment-operator  go to state 132


State 67

   23 unary-expression: unary-operator • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 133
    unary-operator      go to state 67
    cast-expression     go to state 134


State 68

   34 multiplicative-expression: cast-expression •

    $default  reduce using rule 34 (multiplicative-expression)


State 69

   35 multiplicative-expression: multiplicative-expression • STAR cast-expression
   36                          | multiplicative-expression • DIV cast-expression
   37                          | multiplicative-expression • MOD cast-expression
   38 additive-expression: multiplicative-expression •

    STAR  shift, and go to state 135
    DIV   shift, and go to state 136
    MOD   shift, and go to state 137

    $default  reduce using rule 38 (additive-expression)


State 70

   39 additive-expression: additive-expression • PLUS multiplicative-expression
   40                    | additive-expression • MINUS multiplicative-expression
   41 shift-expression: additive-expression •

    PLUS   shift, and go to state 138
    MINUS  shift, and go to state 139

    $default  reduce using rule 41 (shift-expression)


State 71

   42 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   43                 | shift-expression • RIGHT_SHIFT additive-expression
   44 relational-expression: shift-expression •

    LEFT_SHIFT   shift, and go to state 140
    RIGHT_SHIFT  shift, and go to state 141

    $default  reduce using rule 44 (relational-expression)


State 72

   45 relational-expression: relational-expression • LESS_THAN shift-expression
   46                      | relational-expression • GREATER_THAN shift-expression
   47                      | relational-expression • LESS_THAN_EQUAL shift-expression
   48                      | relational-expression • GREATER_THAN_EQUAL shift-expression
   49 equality-expression: relational-expression •

    LESS_THAN           shift, and go to state 142
    GREATER_THAN        shift, and go to state 143
    LESS_THAN_EQUAL     shift, and go to state 144
    GREATER_THAN_EQUAL  shift, and go to state 145

    $default  reduce using rule 49 (equality-expression)


State 73

   50 equality-expression: equality-expression • EQUAL_TO relational-expression
   51                    | equality-expression • NOT_EQUAL_TO relational-expression
   52 AND-expression: equality-expression •

    EQUAL_TO      shift, and go to state 146
    NOT_EQUAL_TO  shift, and go to state 147

    $default  reduce using rule 52 (AND-expression)


State 74

   53 AND-expression: AND-expression • AND equality-expression
   54 exclusive-OR-expression: AND-expression •

    AND  shift, and go to state 148

    $default  reduce using rule 54 (exclusive-OR-expression)


State 75

   55 exclusive-OR-expression: exclusive-OR-expression • XOR AND-expression
   56 inclusive-OR-expression: exclusive-OR-expression •

    XOR  shift, and go to state 149

    $default  reduce using rule 56 (inclusive-OR-expression)


State 76

   57 inclusive-OR-expression: inclusive-OR-expression • OR exclusive-OR-expression
   58 logical-AND-expression: inclusive-OR-expression •

    OR  shift, and go to state 150

    $default  reduce using rule 58 (logical-AND-expression)


State 77

   59 logical-AND-expression: logical-AND-expression • AND_AND M inclusive-OR-expression
   60 logical-OR-expression: logical-AND-expression •

    AND_AND  shift, and go to state 151

    $default  reduce using rule 60 (logical-OR-expression)


State 78

   61 logical-OR-expression: logical-OR-expression • OR_OR M logical-AND-expression
   62 conditional-expression: logical-OR-expression •
   63                       | logical-OR-expression • N QUESTION M expression N COLON M conditional-expression

    OR_OR  shift, and go to state 152

    QUESTION  reduce using rule 65 (N)
    $default  reduce using rule 62 (conditional-expression)

    N  go to state 153


State 79

   66 assignment-expression: conditional-expression •

    $default  reduce using rule 66 (assignment-expression)


State 80

  148 initializer: assignment-expression •

    $default  reduce using rule 148 (initializer)


State 81

   87 init-declarator: declarator EQUALS initializer •

    $default  reduce using rule 87 (init-declarator)


State 82

  208 function-definition: declaration-specifiers declarator declaration-listopt change-table • LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 154


State 83

  212 declaration-list: declaration-list declaration •

    $default  reduce using rule 212 (declaration-list)


State 84

  125 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN • type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET
  126                  | direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN • assignment-expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 29
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 155
    type-qualifier-list        go to state 156


State 85

   27 unary-operator: STAR •
  129 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STAR • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 157

    $default  reduce using rule 27 (unary-operator)


State 86

  124 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 124 (direct-declarator)


State 87

  123 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 158


State 88

  121 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • RIGHT_SQUARE_BRACKET
  122                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • assignment-expression RIGHT_SQUARE_BRACKET
  127                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET
  128                  | direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list • STAR RIGHT_SQUARE_BRACKET
  138 type-qualifier-list: type-qualifier-list • TYPE_QUALIFIER

    IDENTIFIER            shift, and go to state 48
    INTEGER               shift, and go to state 49
    FLOATING_CONSTANT     shift, and go to state 50
    CHARACTER_CONSTANT    shift, and go to state 51
    STRING_LITERAL        shift, and go to state 52
    STATIC_TOKEN          shift, and go to state 159
    SIZEOF                shift, and go to state 53
    TYPE_QUALIFIER        shift, and go to state 44
    INCREMENT             shift, and go to state 54
    DECREMENT             shift, and go to state 55
    AND                   shift, and go to state 56
    STAR                  shift, and go to state 160
    PLUS                  shift, and go to state 58
    MINUS                 shift, and go to state 59
    TILDE                 shift, and go to state 60
    NOT                   shift, and go to state 61
    RIGHT_SQUARE_BRACKET  shift, and go to state 161
    LEFT_PARENTHESIS      shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 162


State 89

  145 identifier-list: IDENTIFIER •

    $default  reduce using rule 145 (identifier-list)


State 90

  131 direct-declarator: direct-declarator LEFT_PARENTHESIS identifier-list • RIGHT_PARENTHESIS
  146 identifier-list: identifier-list • COMMA IDENTIFIER

    COMMA              shift, and go to state 163
    RIGHT_PARENTHESIS  shift, and go to state 164


State 91

  130 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table • parameter-type-list RIGHT_PARENTHESIS
  132                  | direct-declarator LEFT_PARENTHESIS change-table • RIGHT_PARENTHESIS

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5
    RIGHT_PARENTHESIS        shift, and go to state 165

    declaration-specifiers   go to state 166
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    parameter-type-list      go to state 167
    parameter-list           go to state 168
    parameter-declaration    go to state 169


State 92

    6 primary-expression: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   14 postfix-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   25 unary-expression: SIZEOF LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    ENUM                shift, and go to state 104
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 105
    FLOAT               shift, and go to state 106
    VOID                shift, and go to state 107
    CHAR                shift, and go to state 108
    SHORT               shift, and go to state 109
    INT                 shift, and go to state 110
    LONG                shift, and go to state 111
    DOUBLE              shift, and go to state 112
    SIGNED              shift, and go to state 113
    UNSIGNED            shift, and go to state 114
    BOOL                shift, and go to state 115
    COMPLEX             shift, and go to state 116
    IMAGINARY           shift, and go to state 117
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 119
    type-specifier             go to state 120
    specifier-qualifier-list   go to state 121
    enum-specifier             go to state 122
    type-name                  go to state 170


State 93

   24 unary-expression: SIZEOF unary-expression •

    $default  reduce using rule 24 (unary-expression)


State 94

    6 primary-expression: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   14 postfix-expression: LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS • type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    ENUM                shift, and go to state 104
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 105
    FLOAT               shift, and go to state 106
    VOID                shift, and go to state 107
    CHAR                shift, and go to state 108
    SHORT               shift, and go to state 109
    INT                 shift, and go to state 110
    LONG                shift, and go to state 111
    DOUBLE              shift, and go to state 112
    SIGNED              shift, and go to state 113
    UNSIGNED            shift, and go to state 114
    BOOL                shift, and go to state 115
    COMPLEX             shift, and go to state 116
    IMAGINARY           shift, and go to state 117
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 119
    type-specifier             go to state 120
    specifier-qualifier-list   go to state 121
    enum-specifier             go to state 122
    type-name                  go to state 171


State 95

   21 unary-expression: INCREMENT unary-expression •

    $default  reduce using rule 21 (unary-expression)


State 96

   22 unary-expression: DECREMENT unary-expression •

    $default  reduce using rule 22 (unary-expression)


State 97

  158 designator: LEFT_SQUARE_BRACKET • constant-expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 172
    constant-expression        go to state 173


State 98

  159 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 174


State 99

  149 initializer: LEFT_CURLY_BRACKET initializer-list • RIGHT_CURLY_BRACKET
  150            | LEFT_CURLY_BRACKET initializer-list • COMMA RIGHT_CURLY_BRACKET
  152 initializer-list: initializer-list • COMMA designationopt initializer

    COMMA                shift, and go to state 175
    RIGHT_CURLY_BRACKET  shift, and go to state 176


State 100

  151 initializer-list: designationopt • initializer

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_CURLY_BRACKET  shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 80
    initializer                go to state 177


State 101

  153 designationopt: designation •

    $default  reduce using rule 153 (designationopt)


State 102

  155 designation: designator-list • EQUALS
  157 designator-list: designator-list • designator

    EQUALS               shift, and go to state 178
    LEFT_SQUARE_BRACKET  shift, and go to state 97
    DOT                  shift, and go to state 98

    designator  go to state 179


State 103

  156 designator-list: designator •

    $default  reduce using rule 156 (designator-list)


State 104

  107 enum-specifier: ENUM • identifieropt LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET
  108               | ENUM • IDENTIFIER
  109               | ENUM • identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 180

    $default  reduce using rule 111 (identifieropt)

    identifieropt  go to state 181


State 105

  104 specifier-qualifier-list: TYPE_QUALIFIER • specifier-qualifier-listopt

    ENUM            shift, and go to state 104
    TYPE_QUALIFIER  shift, and go to state 105
    FLOAT           shift, and go to state 106
    VOID            shift, and go to state 107
    CHAR            shift, and go to state 108
    SHORT           shift, and go to state 109
    INT             shift, and go to state 110
    LONG            shift, and go to state 111
    DOUBLE          shift, and go to state 112
    SIGNED          shift, and go to state 113
    UNSIGNED        shift, and go to state 114
    BOOL            shift, and go to state 115
    COMPLEX         shift, and go to state 116
    IMAGINARY       shift, and go to state 117

    $default  reduce using rule 106 (specifier-qualifier-listopt)

    type-specifier               go to state 120
    specifier-qualifier-list     go to state 182
    specifier-qualifier-listopt  go to state 183
    enum-specifier               go to state 122


State 106

   93 type-specifier: FLOAT •

    $default  reduce using rule 93 (type-specifier)


State 107

   88 type-specifier: VOID •

    $default  reduce using rule 88 (type-specifier)


State 108

   89 type-specifier: CHAR •

    $default  reduce using rule 89 (type-specifier)


State 109

   90 type-specifier: SHORT •

    $default  reduce using rule 90 (type-specifier)


State 110

   91 type-specifier: INT •

    $default  reduce using rule 91 (type-specifier)


State 111

   92 type-specifier: LONG •

    $default  reduce using rule 92 (type-specifier)


State 112

   94 type-specifier: DOUBLE •

    $default  reduce using rule 94 (type-specifier)


State 113

   95 type-specifier: SIGNED •

    $default  reduce using rule 95 (type-specifier)


State 114

   96 type-specifier: UNSIGNED •

    $default  reduce using rule 96 (type-specifier)


State 115

   97 type-specifier: BOOL •

    $default  reduce using rule 97 (type-specifier)


State 116

   98 type-specifier: COMPLEX •

    $default  reduce using rule 98 (type-specifier)


State 117

   99 type-specifier: IMAGINARY •

    $default  reduce using rule 99 (type-specifier)


State 118

   70 expression: assignment-expression •

    $default  reduce using rule 70 (expression)


State 119

    6 primary-expression: LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS
   71 expression: expression • COMMA assignment-expression

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 185


State 120

  103 specifier-qualifier-list: type-specifier • specifier-qualifier-listopt

    ENUM            shift, and go to state 104
    TYPE_QUALIFIER  shift, and go to state 105
    FLOAT           shift, and go to state 106
    VOID            shift, and go to state 107
    CHAR            shift, and go to state 108
    SHORT           shift, and go to state 109
    INT             shift, and go to state 110
    LONG            shift, and go to state 111
    DOUBLE          shift, and go to state 112
    SIGNED          shift, and go to state 113
    UNSIGNED        shift, and go to state 114
    BOOL            shift, and go to state 115
    COMPLEX         shift, and go to state 116
    IMAGINARY       shift, and go to state 117

    $default  reduce using rule 106 (specifier-qualifier-listopt)

    type-specifier               go to state 120
    specifier-qualifier-list     go to state 182
    specifier-qualifier-listopt  go to state 186
    enum-specifier               go to state 122


State 121

  147 type-name: specifier-qualifier-list •

    $default  reduce using rule 147 (type-name)


State 122

  100 type-specifier: enum-specifier •

    $default  reduce using rule 100 (type-specifier)


State 123

   14 postfix-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   33 cast-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS cast-expression

    RIGHT_PARENTHESIS  shift, and go to state 187


State 124

   12 postfix-expression: postfix-expression INCREMENT •

    $default  reduce using rule 12 (postfix-expression)


State 125

   13 postfix-expression: postfix-expression DECREMENT •

    $default  reduce using rule 13 (postfix-expression)


State 126

    8 postfix-expression: postfix-expression LEFT_SQUARE_BRACKET • expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 188


State 127

    9 postfix-expression: postfix-expression LEFT_PARENTHESIS • argument-expression-listopt RIGHT_PARENTHESIS

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    $default  reduce using rule 19 (argument-expression-listopt)

    primary-expression           go to state 64
    postfix-expression           go to state 65
    argument-expression-list     go to state 189
    argument-expression-listopt  go to state 190
    unary-expression             go to state 66
    unary-operator               go to state 67
    cast-expression              go to state 68
    multiplicative-expression    go to state 69
    additive-expression          go to state 70
    shift-expression             go to state 71
    relational-expression        go to state 72
    equality-expression          go to state 73
    AND-expression               go to state 74
    exclusive-OR-expression      go to state 75
    inclusive-OR-expression      go to state 76
    logical-AND-expression       go to state 77
    logical-OR-expression        go to state 78
    conditional-expression       go to state 79
    assignment-expression        go to state 191


State 128

   10 postfix-expression: postfix-expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 192


State 129

   11 postfix-expression: postfix-expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 193


State 130

   69 assignment-operator: ASSIGNMENT_OPERATOR •

    $default  reduce using rule 69 (assignment-operator)


State 131

   68 assignment-operator: EQUALS •

    $default  reduce using rule 68 (assignment-operator)


State 132

   67 assignment-expression: unary-expression assignment-operator • assignment-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 194


State 133

   32 cast-expression: unary-expression •

    $default  reduce using rule 32 (cast-expression)


State 134

   23 unary-expression: unary-operator cast-expression •

    $default  reduce using rule 23 (unary-expression)


State 135

   35 multiplicative-expression: multiplicative-expression STAR • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 133
    unary-operator      go to state 67
    cast-expression     go to state 195


State 136

   36 multiplicative-expression: multiplicative-expression DIV • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 133
    unary-operator      go to state 67
    cast-expression     go to state 196


State 137

   37 multiplicative-expression: multiplicative-expression MOD • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 133
    unary-operator      go to state 67
    cast-expression     go to state 197


State 138

   39 additive-expression: additive-expression PLUS • multiplicative-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 198


State 139

   40 additive-expression: additive-expression MINUS • multiplicative-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 199


State 140

   42 shift-expression: shift-expression LEFT_SHIFT • additive-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 200


State 141

   43 shift-expression: shift-expression RIGHT_SHIFT • additive-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 201


State 142

   45 relational-expression: relational-expression LESS_THAN • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 202


State 143

   46 relational-expression: relational-expression GREATER_THAN • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 203


State 144

   47 relational-expression: relational-expression LESS_THAN_EQUAL • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 204


State 145

   48 relational-expression: relational-expression GREATER_THAN_EQUAL • shift-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 205


State 146

   50 equality-expression: equality-expression EQUAL_TO • relational-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 206


State 147

   51 equality-expression: equality-expression NOT_EQUAL_TO • relational-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 207


State 148

   53 AND-expression: AND-expression AND • equality-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 208


State 149

   55 exclusive-OR-expression: exclusive-OR-expression XOR • AND-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 209


State 150

   57 inclusive-OR-expression: inclusive-OR-expression OR • exclusive-OR-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 210


State 151

   59 logical-AND-expression: logical-AND-expression AND_AND • M inclusive-OR-expression

    $default  reduce using rule 64 (M)

    M  go to state 211


State 152

   61 logical-OR-expression: logical-OR-expression OR_OR • M logical-AND-expression

    $default  reduce using rule 64 (M)

    M  go to state 212


State 153

   63 conditional-expression: logical-OR-expression N • QUESTION M expression N COLON M conditional-expression

    QUESTION  shift, and go to state 213


State 154

  208 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    $default  reduce using rule 178 (block-item-listopt)

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item-listopt         go to state 233
    block-item-list            go to state 234
    block-item                 go to state 235
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 155

  126 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 240


State 156

  125 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list • assignment-expression RIGHT_SQUARE_BRACKET
  138 type-qualifier-list: type-qualifier-list • TYPE_QUALIFIER

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    TYPE_QUALIFIER      shift, and go to state 44
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 241


State 157

  129 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STAR RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 129 (direct-declarator)


State 158

  123 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 123 (direct-declarator)


State 159

  127 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN • assignment-expression RIGHT_SQUARE_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 242


State 160

   27 unary-operator: STAR •
  128 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STAR • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 243

    $default  reduce using rule 27 (unary-operator)


State 161

  121 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 121 (direct-declarator)


State 162

  122 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 244


State 163

  146 identifier-list: identifier-list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 245


State 164

  131 direct-declarator: direct-declarator LEFT_PARENTHESIS identifier-list RIGHT_PARENTHESIS •

    $default  reduce using rule 131 (direct-declarator)


State 165

  132 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table RIGHT_PARENTHESIS •

    $default  reduce using rule 132 (direct-declarator)


State 166

  143 parameter-declaration: declaration-specifiers • declarator
  144                      | declaration-specifiers •

    IDENTIFIER        shift, and go to state 15
    STAR              shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18

    $default  reduce using rule 144 (parameter-declaration)

    declarator         go to state 246
    direct-declarator  go to state 22
    pointer            go to state 23


State 167

  130 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table parameter-type-list • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 247


State 168

  139 parameter-type-list: parameter-list •
  140                    | parameter-list • COMMA ELLIPSIS
  142 parameter-list: parameter-list • COMMA parameter-declaration

    COMMA  shift, and go to state 248

    $default  reduce using rule 139 (parameter-type-list)


State 169

  141 parameter-list: parameter-declaration •

    $default  reduce using rule 141 (parameter-list)


State 170

   14 postfix-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   25 unary-expression: SIZEOF LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 249


State 171

   14 postfix-expression: LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 250


State 172

   72 constant-expression: conditional-expression •

    $default  reduce using rule 72 (constant-expression)


State 173

  158 designator: LEFT_SQUARE_BRACKET constant-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 251


State 174

  159 designator: DOT IDENTIFIER •

    $default  reduce using rule 159 (designator)


State 175

  150 initializer: LEFT_CURLY_BRACKET initializer-list COMMA • RIGHT_CURLY_BRACKET
  152 initializer-list: initializer-list COMMA • designationopt initializer

    LEFT_SQUARE_BRACKET  shift, and go to state 97
    RIGHT_CURLY_BRACKET  shift, and go to state 252
    DOT                  shift, and go to state 98

    $default  reduce using rule 154 (designationopt)

    designationopt   go to state 253
    designation      go to state 101
    designator-list  go to state 102
    designator       go to state 103


State 176

  149 initializer: LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET •

    $default  reduce using rule 149 (initializer)


State 177

  151 initializer-list: designationopt initializer •

    $default  reduce using rule 151 (initializer-list)


State 178

  155 designation: designator-list EQUALS •

    $default  reduce using rule 155 (designation)


State 179

  157 designator-list: designator-list designator •

    $default  reduce using rule 157 (designator-list)


State 180

  108 enum-specifier: ENUM IDENTIFIER •
  110 identifieropt: IDENTIFIER •

    LEFT_CURLY_BRACKET  reduce using rule 110 (identifieropt)
    $default            reduce using rule 108 (enum-specifier)


State 181

  107 enum-specifier: ENUM identifieropt • LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET
  109               | ENUM identifieropt • LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 254


State 182

  105 specifier-qualifier-listopt: specifier-qualifier-list •

    $default  reduce using rule 105 (specifier-qualifier-listopt)


State 183

  104 specifier-qualifier-list: TYPE_QUALIFIER specifier-qualifier-listopt •

    $default  reduce using rule 104 (specifier-qualifier-list)


State 184

   71 expression: expression COMMA • assignment-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 255


State 185

    6 primary-expression: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS •

    $default  reduce using rule 6 (primary-expression)


State 186

  103 specifier-qualifier-list: type-specifier specifier-qualifier-listopt •

    $default  reduce using rule 103 (specifier-qualifier-list)


State 187

   14 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   33 cast-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • cast-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_CURLY_BRACKET  shift, and go to state 256
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression  go to state 64
    postfix-expression  go to state 65
    unary-expression    go to state 133
    unary-operator      go to state 67
    cast-expression     go to state 257


State 188

    8 postfix-expression: postfix-expression LEFT_SQUARE_BRACKET expression • RIGHT_SQUARE_BRACKET
   71 expression: expression • COMMA assignment-expression

    COMMA                 shift, and go to state 184
    RIGHT_SQUARE_BRACKET  shift, and go to state 258


State 189

   17 argument-expression-list: argument-expression-list • COMMA assignment-expression
   18 argument-expression-listopt: argument-expression-list •

    COMMA  shift, and go to state 259

    $default  reduce using rule 18 (argument-expression-listopt)


State 190

    9 postfix-expression: postfix-expression LEFT_PARENTHESIS argument-expression-listopt • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 260


State 191

   16 argument-expression-list: assignment-expression •

    $default  reduce using rule 16 (argument-expression-list)


State 192

   10 postfix-expression: postfix-expression DOT IDENTIFIER •

    $default  reduce using rule 10 (postfix-expression)


State 193

   11 postfix-expression: postfix-expression ARROW IDENTIFIER •

    $default  reduce using rule 11 (postfix-expression)


State 194

   67 assignment-expression: unary-expression assignment-operator assignment-expression •

    $default  reduce using rule 67 (assignment-expression)


State 195

   35 multiplicative-expression: multiplicative-expression STAR cast-expression •

    $default  reduce using rule 35 (multiplicative-expression)


State 196

   36 multiplicative-expression: multiplicative-expression DIV cast-expression •

    $default  reduce using rule 36 (multiplicative-expression)


State 197

   37 multiplicative-expression: multiplicative-expression MOD cast-expression •

    $default  reduce using rule 37 (multiplicative-expression)


State 198

   35 multiplicative-expression: multiplicative-expression • STAR cast-expression
   36                          | multiplicative-expression • DIV cast-expression
   37                          | multiplicative-expression • MOD cast-expression
   39 additive-expression: additive-expression PLUS multiplicative-expression •

    STAR  shift, and go to state 135
    DIV   shift, and go to state 136
    MOD   shift, and go to state 137

    $default  reduce using rule 39 (additive-expression)


State 199

   35 multiplicative-expression: multiplicative-expression • STAR cast-expression
   36                          | multiplicative-expression • DIV cast-expression
   37                          | multiplicative-expression • MOD cast-expression
   40 additive-expression: additive-expression MINUS multiplicative-expression •

    STAR  shift, and go to state 135
    DIV   shift, and go to state 136
    MOD   shift, and go to state 137

    $default  reduce using rule 40 (additive-expression)


State 200

   39 additive-expression: additive-expression • PLUS multiplicative-expression
   40                    | additive-expression • MINUS multiplicative-expression
   42 shift-expression: shift-expression LEFT_SHIFT additive-expression •

    PLUS   shift, and go to state 138
    MINUS  shift, and go to state 139

    $default  reduce using rule 42 (shift-expression)


State 201

   39 additive-expression: additive-expression • PLUS multiplicative-expression
   40                    | additive-expression • MINUS multiplicative-expression
   43 shift-expression: shift-expression RIGHT_SHIFT additive-expression •

    PLUS   shift, and go to state 138
    MINUS  shift, and go to state 139

    $default  reduce using rule 43 (shift-expression)


State 202

   42 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   43                 | shift-expression • RIGHT_SHIFT additive-expression
   45 relational-expression: relational-expression LESS_THAN shift-expression •

    LEFT_SHIFT   shift, and go to state 140
    RIGHT_SHIFT  shift, and go to state 141

    $default  reduce using rule 45 (relational-expression)


State 203

   42 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   43                 | shift-expression • RIGHT_SHIFT additive-expression
   46 relational-expression: relational-expression GREATER_THAN shift-expression •

    LEFT_SHIFT   shift, and go to state 140
    RIGHT_SHIFT  shift, and go to state 141

    $default  reduce using rule 46 (relational-expression)


State 204

   42 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   43                 | shift-expression • RIGHT_SHIFT additive-expression
   47 relational-expression: relational-expression LESS_THAN_EQUAL shift-expression •

    LEFT_SHIFT   shift, and go to state 140
    RIGHT_SHIFT  shift, and go to state 141

    $default  reduce using rule 47 (relational-expression)


State 205

   42 shift-expression: shift-expression • LEFT_SHIFT additive-expression
   43                 | shift-expression • RIGHT_SHIFT additive-expression
   48 relational-expression: relational-expression GREATER_THAN_EQUAL shift-expression •

    LEFT_SHIFT   shift, and go to state 140
    RIGHT_SHIFT  shift, and go to state 141

    $default  reduce using rule 48 (relational-expression)


State 206

   45 relational-expression: relational-expression • LESS_THAN shift-expression
   46                      | relational-expression • GREATER_THAN shift-expression
   47                      | relational-expression • LESS_THAN_EQUAL shift-expression
   48                      | relational-expression • GREATER_THAN_EQUAL shift-expression
   50 equality-expression: equality-expression EQUAL_TO relational-expression •

    LESS_THAN           shift, and go to state 142
    GREATER_THAN        shift, and go to state 143
    LESS_THAN_EQUAL     shift, and go to state 144
    GREATER_THAN_EQUAL  shift, and go to state 145

    $default  reduce using rule 50 (equality-expression)


State 207

   45 relational-expression: relational-expression • LESS_THAN shift-expression
   46                      | relational-expression • GREATER_THAN shift-expression
   47                      | relational-expression • LESS_THAN_EQUAL shift-expression
   48                      | relational-expression • GREATER_THAN_EQUAL shift-expression
   51 equality-expression: equality-expression NOT_EQUAL_TO relational-expression •

    LESS_THAN           shift, and go to state 142
    GREATER_THAN        shift, and go to state 143
    LESS_THAN_EQUAL     shift, and go to state 144
    GREATER_THAN_EQUAL  shift, and go to state 145

    $default  reduce using rule 51 (equality-expression)


State 208

   50 equality-expression: equality-expression • EQUAL_TO relational-expression
   51                    | equality-expression • NOT_EQUAL_TO relational-expression
   53 AND-expression: AND-expression AND equality-expression •

    EQUAL_TO      shift, and go to state 146
    NOT_EQUAL_TO  shift, and go to state 147

    $default  reduce using rule 53 (AND-expression)


State 209

   53 AND-expression: AND-expression • AND equality-expression
   55 exclusive-OR-expression: exclusive-OR-expression XOR AND-expression •

    AND  shift, and go to state 148

    $default  reduce using rule 55 (exclusive-OR-expression)


State 210

   55 exclusive-OR-expression: exclusive-OR-expression • XOR AND-expression
   57 inclusive-OR-expression: inclusive-OR-expression OR exclusive-OR-expression •

    XOR  shift, and go to state 149

    $default  reduce using rule 57 (inclusive-OR-expression)


State 211

   59 logical-AND-expression: logical-AND-expression AND_AND M • inclusive-OR-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 261


State 212

   61 logical-OR-expression: logical-OR-expression OR_OR M • logical-AND-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 262


State 213

   63 conditional-expression: logical-OR-expression N QUESTION • M expression N COLON M conditional-expression

    $default  reduce using rule 64 (M)

    M  go to state 263


State 214

    1 primary-expression: IDENTIFIER •
  171 labeled-statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 264

    $default  reduce using rule 1 (primary-expression)


State 215

  172 labeled-statement: CASE • constant-expression COLON statement

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 172
    constant-expression        go to state 265


State 216

  173 labeled-statement: DEFAULT • COLON statement

    COLON  shift, and go to state 266


State 217

  187 selection-statement: SWITCH • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS  shift, and go to state 267


State 218

  188 iteration-statement: WHILE • W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE • W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 197 (W)

    W  go to state 268


State 219

  190 iteration-statement: DO • D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  191                    | DO • D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 198 (D)

    D  go to state 269


State 220

  192 iteration-statement: FOR • F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  193                    | FOR • F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR • F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  195                    | FOR • F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 196 (F)

    F  go to state 270


State 221

  199 jump-statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 271


State 222

  200 jump-statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 272


State 223

  201 jump-statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 273


State 224

  202 jump-statement: RETURN • expression SEMICOLON
  203               | RETURN • SEMICOLON

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 274
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 275


State 225

  185 selection-statement: IF • LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N
  186                    | IF • LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M statement

    LEFT_PARENTHESIS  shift, and go to state 276


State 226

  184 expression-statement: SEMICOLON •

    $default  reduce using rule 184 (expression-statement)


State 227

  174 compound-statement: LEFT_CURLY_BRACKET • A change-table block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 175 (A)

    A  go to state 277


State 228

   71 expression: expression • COMMA assignment-expression
  183 expression-statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 278
    COMMA      shift, and go to state 184


State 229

  181 block-item: declaration •

    $default  reduce using rule 181 (block-item)


State 230

  182 block-item: statement •

    $default  reduce using rule 182 (block-item)


State 231

  160 statement: labeled-statement •

    $default  reduce using rule 160 (statement)


State 232

  161 statement: compound-statement •

    $default  reduce using rule 161 (statement)


State 233

  208 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 279


State 234

  177 block-item-listopt: block-item-list •
  180 block-item-list: block-item-list • M block-item

    RIGHT_CURLY_BRACKET  reduce using rule 177 (block-item-listopt)
    $default             reduce using rule 64 (M)

    M  go to state 280


State 235

  179 block-item-list: block-item •

    $default  reduce using rule 179 (block-item-list)


State 236

  162 statement: expression-statement •

    $default  reduce using rule 162 (statement)


State 237

  163 statement: selection-statement •

    $default  reduce using rule 163 (statement)


State 238

  164 statement: iteration-statement •

    $default  reduce using rule 164 (statement)


State 239

  165 statement: jump-statement •

    $default  reduce using rule 165 (statement)


State 240

  126 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 126 (direct-declarator)


State 241

  125 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 281


State 242

  127 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 282


State 243

  128 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STAR RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 128 (direct-declarator)


State 244

  122 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 122 (direct-declarator)


State 245

  146 identifier-list: identifier-list COMMA IDENTIFIER •

    $default  reduce using rule 146 (identifier-list)


State 246

  143 parameter-declaration: declaration-specifiers declarator •

    $default  reduce using rule 143 (parameter-declaration)


State 247

  130 direct-declarator: direct-declarator LEFT_PARENTHESIS change-table parameter-type-list RIGHT_PARENTHESIS •

    $default  reduce using rule 130 (direct-declarator)


State 248

  140 parameter-type-list: parameter-list COMMA • ELLIPSIS
  142 parameter-list: parameter-list COMMA • parameter-declaration

    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    TYPE_QUALIFIER           shift, and go to state 5
    ELLIPSIS                 shift, and go to state 283

    declaration-specifiers   go to state 166
    type-qualifier           go to state 8
    storage-class-specifier  go to state 9
    function-specifier       go to state 10
    parameter-declaration    go to state 284


State 249

   14 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET
   25 unary-expression: SIZEOF LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS •

    LEFT_CURLY_BRACKET  shift, and go to state 256

    $default  reduce using rule 25 (unary-expression)


State 250

   14 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 256


State 251

  158 designator: LEFT_SQUARE_BRACKET constant-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 158 (designator)


State 252

  150 initializer: LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 150 (initializer)


State 253

  152 initializer-list: initializer-list COMMA designationopt • initializer

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_CURLY_BRACKET  shift, and go to state 62
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 80
    initializer                go to state 285


State 254

  107 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET • enumerator-list RIGHT_CURLY_BRACKET
  109               | ENUM identifieropt LEFT_CURLY_BRACKET • enumerator-list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 286

    enumerator-list  go to state 287
    enumerator       go to state 288


State 255

   71 expression: expression COMMA assignment-expression •

    $default  reduce using rule 71 (expression)


State 256

   14 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET • initializer-list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET • initializer-list COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 97
    DOT                  shift, and go to state 98

    $default  reduce using rule 154 (designationopt)

    initializer-list  go to state 289
    designationopt    go to state 100
    designation       go to state 101
    designator-list   go to state 102
    designator        go to state 103


State 257

   33 cast-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS cast-expression •

    $default  reduce using rule 33 (cast-expression)


State 258

    8 postfix-expression: postfix-expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 8 (postfix-expression)


State 259

   17 argument-expression-list: argument-expression-list COMMA • assignment-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 290


State 260

    9 postfix-expression: postfix-expression LEFT_PARENTHESIS argument-expression-listopt RIGHT_PARENTHESIS •

    $default  reduce using rule 9 (postfix-expression)


State 261

   57 inclusive-OR-expression: inclusive-OR-expression • OR exclusive-OR-expression
   59 logical-AND-expression: logical-AND-expression AND_AND M inclusive-OR-expression •

    OR  shift, and go to state 150

    $default  reduce using rule 59 (logical-AND-expression)


State 262

   59 logical-AND-expression: logical-AND-expression • AND_AND M inclusive-OR-expression
   61 logical-OR-expression: logical-OR-expression OR_OR M logical-AND-expression •

    AND_AND  shift, and go to state 151

    $default  reduce using rule 61 (logical-OR-expression)


State 263

   63 conditional-expression: logical-OR-expression N QUESTION M • expression N COLON M conditional-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 291


State 264

  171 labeled-statement: IDENTIFIER COLON • statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    statement                  go to state 292
    labeled-statement          go to state 231
    compound-statement         go to state 232
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 265

  172 labeled-statement: CASE constant-expression • COLON statement

    COLON  shift, and go to state 293


State 266

  173 labeled-statement: DEFAULT COLON • statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    statement                  go to state 294
    labeled-statement          go to state 231
    compound-statement         go to state 232
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 267

  187 selection-statement: SWITCH LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 295


State 268

  188 iteration-statement: WHILE W • LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W • LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 296


State 269

  190 iteration-statement: DO D • M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
  191                    | DO D • LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_CURLY_BRACKET  shift, and go to state 297

    $default  reduce using rule 64 (M)

    M  go to state 298


State 270

  192 iteration-statement: FOR F • LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  193                    | FOR F • LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F • LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  195                    | FOR F • LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 299


State 271

  199 jump-statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 300


State 272

  200 jump-statement: CONTINUE SEMICOLON •

    $default  reduce using rule 200 (jump-statement)


State 273

  201 jump-statement: BREAK SEMICOLON •

    $default  reduce using rule 201 (jump-statement)


State 274

  203 jump-statement: RETURN SEMICOLON •

    $default  reduce using rule 203 (jump-statement)


State 275

   71 expression: expression • COMMA assignment-expression
  202 jump-statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 301
    COMMA      shift, and go to state 184


State 276

  185 selection-statement: IF LEFT_PARENTHESIS • expression N RIGHT_PARENTHESIS M statement N
  186                    | IF LEFT_PARENTHESIS • expression N RIGHT_PARENTHESIS M statement N ELSE M statement

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 302


State 277

  174 compound-statement: LEFT_CURLY_BRACKET A • change-table block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (change-table)

    change-table  go to state 303


State 278

  183 expression-statement: expression SEMICOLON •

    $default  reduce using rule 183 (expression-statement)


State 279

  208 function-definition: declaration-specifiers declarator declaration-listopt change-table LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 208 (function-definition)


State 280

  180 block-item-list: block-item-list M • block-item

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item                 go to state 304
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 281

  125 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET STATIC_TOKEN type-qualifier-list assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 125 (direct-declarator)


State 282

  127 direct-declarator: direct-declarator LEFT_SQUARE_BRACKET type-qualifier-list STATIC_TOKEN assignment-expression RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 127 (direct-declarator)


State 283

  140 parameter-type-list: parameter-list COMMA ELLIPSIS •

    $default  reduce using rule 140 (parameter-type-list)


State 284

  142 parameter-list: parameter-list COMMA parameter-declaration •

    $default  reduce using rule 142 (parameter-list)


State 285

  152 initializer-list: initializer-list COMMA designationopt initializer •

    $default  reduce using rule 152 (initializer-list)


State 286

  114 enumerator: IDENTIFIER •
  115           | IDENTIFIER • EQUALS constant-expression

    EQUALS  shift, and go to state 305

    $default  reduce using rule 114 (enumerator)


State 287

  107 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list • RIGHT_CURLY_BRACKET
  109               | ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list • COMMA RIGHT_CURLY_BRACKET
  113 enumerator-list: enumerator-list • COMMA enumerator

    COMMA                shift, and go to state 306
    RIGHT_CURLY_BRACKET  shift, and go to state 307


State 288

  112 enumerator-list: enumerator •

    $default  reduce using rule 112 (enumerator-list)


State 289

   14 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list • RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list • COMMA RIGHT_CURLY_BRACKET
  152 initializer-list: initializer-list • COMMA designationopt initializer

    COMMA                shift, and go to state 308
    RIGHT_CURLY_BRACKET  shift, and go to state 309


State 290

   17 argument-expression-list: argument-expression-list COMMA assignment-expression •

    $default  reduce using rule 17 (argument-expression-list)


State 291

   63 conditional-expression: logical-OR-expression N QUESTION M expression • N COLON M conditional-expression
   71 expression: expression • COMMA assignment-expression

    COMMA  shift, and go to state 184

    $default  reduce using rule 65 (N)

    N  go to state 310


State 292

  171 labeled-statement: IDENTIFIER COLON statement •

    $default  reduce using rule 171 (labeled-statement)


State 293

  172 labeled-statement: CASE constant-expression COLON • statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    statement                  go to state 311
    labeled-statement          go to state 231
    compound-statement         go to state 232
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 294

  173 labeled-statement: DEFAULT COLON statement •

    $default  reduce using rule 173 (labeled-statement)


State 295

   71 expression: expression • COMMA assignment-expression
  187 selection-statement: SWITCH LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 312


State 296

  188 iteration-statement: WHILE W LEFT_PARENTHESIS • A change-table M expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS • A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 175 (A)

    A  go to state 313


State 297

  191 iteration-statement: DO D LEFT_CURLY_BRACKET • M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 64 (M)

    M  go to state 314


State 298

  190 iteration-statement: DO D M • loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    loop-statement             go to state 315
    labeled-statement          go to state 316
    expression-statement       go to state 317
    selection-statement        go to state 318
    iteration-statement        go to state 319
    jump-statement             go to state 320


State 299

  192 iteration-statement: FOR F LEFT_PARENTHESIS • A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  193                    | FOR F LEFT_PARENTHESIS • A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS • A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  195                    | FOR F LEFT_PARENTHESIS • A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 175 (A)

    A  go to state 321


State 300

  199 jump-statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 199 (jump-statement)


State 301

  202 jump-statement: RETURN expression SEMICOLON •

    $default  reduce using rule 202 (jump-statement)


State 302

   71 expression: expression • COMMA assignment-expression
  185 selection-statement: IF LEFT_PARENTHESIS expression • N RIGHT_PARENTHESIS M statement N
  186                    | IF LEFT_PARENTHESIS expression • N RIGHT_PARENTHESIS M statement N ELSE M statement

    COMMA  shift, and go to state 184

    $default  reduce using rule 65 (N)

    N  go to state 322


State 303

  174 compound-statement: LEFT_CURLY_BRACKET A change-table • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    $default  reduce using rule 178 (block-item-listopt)

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item-listopt         go to state 323
    block-item-list            go to state 234
    block-item                 go to state 235
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 304

  180 block-item-list: block-item-list M block-item •

    $default  reduce using rule 180 (block-item-list)


State 305

  115 enumerator: IDENTIFIER EQUALS • constant-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 172
    constant-expression        go to state 324


State 306

  109 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA • RIGHT_CURLY_BRACKET
  113 enumerator-list: enumerator-list COMMA • enumerator

    IDENTIFIER           shift, and go to state 286
    RIGHT_CURLY_BRACKET  shift, and go to state 325

    enumerator  go to state 326


State 307

  107 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list RIGHT_CURLY_BRACKET •

    $default  reduce using rule 107 (enum-specifier)


State 308

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA • RIGHT_CURLY_BRACKET
  152 initializer-list: initializer-list COMMA • designationopt initializer

    LEFT_SQUARE_BRACKET  shift, and go to state 97
    RIGHT_CURLY_BRACKET  shift, and go to state 327
    DOT                  shift, and go to state 98

    $default  reduce using rule 154 (designationopt)

    designationopt   go to state 253
    designation      go to state 101
    designator-list  go to state 102
    designator       go to state 103


State 309

   14 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list RIGHT_CURLY_BRACKET •

    $default  reduce using rule 14 (postfix-expression)


State 310

   63 conditional-expression: logical-OR-expression N QUESTION M expression N • COLON M conditional-expression

    COLON  shift, and go to state 328


State 311

  172 labeled-statement: CASE constant-expression COLON statement •

    $default  reduce using rule 172 (labeled-statement)


State 312

  187 selection-statement: SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    statement                  go to state 329
    labeled-statement          go to state 231
    compound-statement         go to state 232
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 313

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A • change-table M expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS A • change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (change-table)

    change-table  go to state 330


State 314

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M • block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    $default  reduce using rule 178 (block-item-listopt)

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item-listopt         go to state 331
    block-item-list            go to state 234
    block-item                 go to state 235
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 315

  190 iteration-statement: DO D M loop-statement • M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 64 (M)

    M  go to state 332


State 316

  166 loop-statement: labeled-statement •

    $default  reduce using rule 166 (loop-statement)


State 317

  167 loop-statement: expression-statement •

    $default  reduce using rule 167 (loop-statement)


State 318

  168 loop-statement: selection-statement •

    $default  reduce using rule 168 (loop-statement)


State 319

  169 loop-statement: iteration-statement •

    $default  reduce using rule 169 (loop-statement)


State 320

  170 loop-statement: jump-statement •

    $default  reduce using rule 170 (loop-statement)


State 321

  192 iteration-statement: FOR F LEFT_PARENTHESIS A • change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  193                    | FOR F LEFT_PARENTHESIS A • change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A • change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  195                    | FOR F LEFT_PARENTHESIS A • change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 176 (change-table)

    change-table  go to state 333


State 322

  185 selection-statement: IF LEFT_PARENTHESIS expression N • RIGHT_PARENTHESIS M statement N
  186                    | IF LEFT_PARENTHESIS expression N • RIGHT_PARENTHESIS M statement N ELSE M statement

    RIGHT_PARENTHESIS  shift, and go to state 334


State 323

  174 compound-statement: LEFT_CURLY_BRACKET A change-table block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 335


State 324

  115 enumerator: IDENTIFIER EQUALS constant-expression •

    $default  reduce using rule 115 (enumerator)


State 325

  109 enum-specifier: ENUM identifieropt LEFT_CURLY_BRACKET enumerator-list COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 109 (enum-specifier)


State 326

  113 enumerator-list: enumerator-list COMMA enumerator •

    $default  reduce using rule 113 (enumerator-list)


State 327

   15 postfix-expression: LEFT_PARENTHESIS type-name RIGHT_PARENTHESIS LEFT_CURLY_BRACKET initializer-list COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 15 (postfix-expression)


State 328

   63 conditional-expression: logical-OR-expression N QUESTION M expression N COLON • M conditional-expression

    $default  reduce using rule 64 (M)

    M  go to state 336


State 329

  187 selection-statement: SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement •

    $default  reduce using rule 187 (selection-statement)


State 330

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table • M expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS A change-table • M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 337


State 331

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt • RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    RIGHT_CURLY_BRACKET  shift, and go to state 338


State 332

  190 iteration-statement: DO D M loop-statement M • WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 339


State 333

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table • declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  193                    | FOR F LEFT_PARENTHESIS A change-table • expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table • declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET
  195                    | FOR F LEFT_PARENTHESIS A change-table • expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 48
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    SIZEOF                   shift, and go to state 53
    TYPE_QUALIFIER           shift, and go to state 5
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_PARENTHESIS         shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 340
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    expression-statement       go to state 341


State 334

  185 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS • M statement N
  186                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS • M statement N ELSE M statement

    $default  reduce using rule 64 (M)

    M  go to state 342


State 335

  174 compound-statement: LEFT_CURLY_BRACKET A change-table block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 174 (compound-statement)


State 336

   63 conditional-expression: logical-OR-expression N QUESTION M expression N COLON M • conditional-expression

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 133
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 343


State 337

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M • expression RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS A change-table M • expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 344


State 338

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET • M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    $default  reduce using rule 64 (M)

    M  go to state 345


State 339

  190 iteration-statement: DO D M loop-statement M WHILE • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 346


State 340

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration • M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration • M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 347


State 341

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement • M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement • M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 348


State 342

  185 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M • statement N
  186                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M • statement N ELSE M statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    statement                  go to state 349
    labeled-statement          go to state 231
    compound-statement         go to state 232
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 343

   63 conditional-expression: logical-OR-expression N QUESTION M expression N COLON M conditional-expression •

    $default  reduce using rule 63 (conditional-expression)


State 344

   71 expression: expression • COMMA assignment-expression
  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression • RIGHT_PARENTHESIS M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS A change-table M expression • RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 350


State 345

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M • WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 351


State 346

  190 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 352


State 347

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M • expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M • expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    expression-statement       go to state 353


State 348

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M • expression-statement M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M • expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    expression-statement       go to state 354


State 349

  185 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement • N
  186                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement • N ELSE M statement

    $default  reduce using rule 65 (N)

    N  go to state 355


State 350

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS • M loop-statement
  189                    | WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS • LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 356

    $default  reduce using rule 64 (M)

    M  go to state 357


State 351

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 358


State 352

   71 expression: expression • COMMA assignment-expression
  190 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS SEMICOLON

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 359


State 353

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement • M expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement • M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 360


State 354

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement • M expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement • M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 361


State 355

  185 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N •
  186                    | IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N • ELSE M statement

    ELSE  shift, and go to state 362

    $default  reduce using rule 185 (selection-statement)


State 356

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET • M block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 363


State 357

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M • loop-statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    loop-statement             go to state 364
    labeled-statement          go to state 316
    expression-statement       go to state 317
    selection-statement        go to state 318
    iteration-statement        go to state 319
    jump-statement             go to state 320


State 358

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS SEMICOLON

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 365


State 359

  190 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 366


State 360

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M • expression N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M • expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 367


State 361

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M • expression N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M • expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 48
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    SIZEOF              shift, and go to state 53
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 368


State 362

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE • M statement

    $default  reduce using rule 64 (M)

    M  go to state 369


State 363

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    $default  reduce using rule 178 (block-item-listopt)

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item-listopt         go to state 370
    block-item-list            go to state 234
    block-item                 go to state 235
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 364

  188 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS M loop-statement •

    $default  reduce using rule 188 (iteration-statement)


State 365

   71 expression: expression • COMMA assignment-expression
  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS SEMICOLON

    COMMA              shift, and go to state 184
    RIGHT_PARENTHESIS  shift, and go to state 371


State 366

  190 iteration-statement: DO D M loop-statement M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON •

    $default  reduce using rule 190 (iteration-statement)


State 367

   71 expression: expression • COMMA assignment-expression
  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression • N RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression • N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    COMMA  shift, and go to state 184

    $default  reduce using rule 65 (N)

    N  go to state 372


State 368

   71 expression: expression • COMMA assignment-expression
  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression • N RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression • N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    COMMA  shift, and go to state 184

    $default  reduce using rule 65 (N)

    N  go to state 373


State 369

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M • statement

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 227
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    statement                  go to state 374
    labeled-statement          go to state 231
    compound-statement         go to state 232
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 370

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 375


State 371

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 376


State 372

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N • RIGHT_PARENTHESIS M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N • RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 377


State 373

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N • RIGHT_PARENTHESIS M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N • RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 378


State 374

  186 selection-statement: IF LEFT_PARENTHESIS expression N RIGHT_PARENTHESIS M statement N ELSE M statement •

    $default  reduce using rule 186 (selection-statement)


State 375

  189 iteration-statement: WHILE W LEFT_PARENTHESIS A change-table M expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 189 (iteration-statement)


State 376

  191 iteration-statement: DO D LEFT_CURLY_BRACKET M block-item-listopt RIGHT_CURLY_BRACKET M WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON •

    $default  reduce using rule 191 (iteration-statement)


State 377

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS • M loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS • M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 379


State 378

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS • M loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS • M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    $default  reduce using rule 64 (M)

    M  go to state 380


State 379

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M • loop-statement
  194                    | FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M • LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 381
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    loop-statement             go to state 382
    labeled-statement          go to state 316
    expression-statement       go to state 317
    selection-statement        go to state 318
    iteration-statement        go to state 319
    jump-statement             go to state 320


State 380

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M • loop-statement
  195                    | FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M • LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER          shift, and go to state 214
    INTEGER             shift, and go to state 49
    FLOATING_CONSTANT   shift, and go to state 50
    CHARACTER_CONSTANT  shift, and go to state 51
    STRING_LITERAL      shift, and go to state 52
    CASE                shift, and go to state 215
    DEFAULT             shift, and go to state 216
    SIZEOF              shift, and go to state 53
    SWITCH              shift, and go to state 217
    WHILE               shift, and go to state 218
    DO                  shift, and go to state 219
    FOR                 shift, and go to state 220
    GOTO                shift, and go to state 221
    CONTINUE            shift, and go to state 222
    BREAK               shift, and go to state 223
    RETURN              shift, and go to state 224
    IF                  shift, and go to state 225
    INCREMENT           shift, and go to state 54
    DECREMENT           shift, and go to state 55
    AND                 shift, and go to state 56
    STAR                shift, and go to state 57
    PLUS                shift, and go to state 58
    MINUS               shift, and go to state 59
    TILDE               shift, and go to state 60
    NOT                 shift, and go to state 61
    SEMICOLON           shift, and go to state 226
    LEFT_CURLY_BRACKET  shift, and go to state 383
    LEFT_PARENTHESIS    shift, and go to state 63

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    loop-statement             go to state 384
    labeled-statement          go to state 316
    expression-statement       go to state 317
    selection-statement        go to state 318
    iteration-statement        go to state 319
    jump-statement             go to state 320


State 381

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    $default  reduce using rule 178 (block-item-listopt)

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item-listopt         go to state 385
    block-item-list            go to state 234
    block-item                 go to state 235
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 382

  192 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement •

    $default  reduce using rule 192 (iteration-statement)


State 383

  195 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET • block-item-listopt RIGHT_CURLY_BRACKET

    IDENTIFIER               shift, and go to state 214
    INTEGER                  shift, and go to state 49
    FLOATING_CONSTANT        shift, and go to state 50
    CHARACTER_CONSTANT       shift, and go to state 51
    STRING_LITERAL           shift, and go to state 52
    TYPE_SPECIFIER_TOKEN     shift, and go to state 1
    STORAGE_CLASS_SPECIFIER  shift, and go to state 2
    STATIC_TOKEN             shift, and go to state 3
    FUNCTION_SPECIFIER       shift, and go to state 4
    CASE                     shift, and go to state 215
    DEFAULT                  shift, and go to state 216
    SIZEOF                   shift, and go to state 53
    SWITCH                   shift, and go to state 217
    WHILE                    shift, and go to state 218
    DO                       shift, and go to state 219
    FOR                      shift, and go to state 220
    GOTO                     shift, and go to state 221
    CONTINUE                 shift, and go to state 222
    BREAK                    shift, and go to state 223
    RETURN                   shift, and go to state 224
    TYPE_QUALIFIER           shift, and go to state 5
    IF                       shift, and go to state 225
    INCREMENT                shift, and go to state 54
    DECREMENT                shift, and go to state 55
    AND                      shift, and go to state 56
    STAR                     shift, and go to state 57
    PLUS                     shift, and go to state 58
    MINUS                    shift, and go to state 59
    TILDE                    shift, and go to state 60
    NOT                      shift, and go to state 61
    SEMICOLON                shift, and go to state 226
    LEFT_CURLY_BRACKET       shift, and go to state 227
    LEFT_PARENTHESIS         shift, and go to state 63

    $default  reduce using rule 178 (block-item-listopt)

    primary-expression         go to state 64
    postfix-expression         go to state 65
    unary-expression           go to state 66
    unary-operator             go to state 67
    cast-expression            go to state 68
    multiplicative-expression  go to state 69
    additive-expression        go to state 70
    shift-expression           go to state 71
    relational-expression      go to state 72
    equality-expression        go to state 73
    AND-expression             go to state 74
    exclusive-OR-expression    go to state 75
    inclusive-OR-expression    go to state 76
    logical-AND-expression     go to state 77
    logical-OR-expression      go to state 78
    conditional-expression     go to state 79
    assignment-expression      go to state 118
    expression                 go to state 228
    declaration                go to state 229
    declaration-specifiers     go to state 37
    type-qualifier             go to state 8
    storage-class-specifier    go to state 9
    function-specifier         go to state 10
    statement                  go to state 230
    labeled-statement          go to state 231
    compound-statement         go to state 232
    block-item-listopt         go to state 386
    block-item-list            go to state 234
    block-item                 go to state 235
    expression-statement       go to state 236
    selection-statement        go to state 237
    iteration-statement        go to state 238
    jump-statement             go to state 239


State 384

  193 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M loop-statement •

    $default  reduce using rule 193 (iteration-statement)


State 385

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 387


State 386

  195 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 388


State 387

  194 iteration-statement: FOR F LEFT_PARENTHESIS A change-table declaration M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 194 (iteration-statement)


State 388

  195 iteration-statement: FOR F LEFT_PARENTHESIS A change-table expression-statement M expression-statement M expression N RIGHT_PARENTHESIS M LEFT_CURLY_BRACKET block-item-listopt RIGHT_CURLY_BRACKET •

    $default  reduce using rule 195 (iteration-statement)
